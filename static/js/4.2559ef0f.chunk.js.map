{ "version": 3, "sources": ["components/ApproveConfirmButtons.tsx", "views/Profile/ProfileCreation/config.ts", "views/Profile/ProfileCreation/contexts/ProfileCreationProvider.tsx", "views/Profile/ProfileCreation/Header.tsx", "views/Profile/components/WalletNotConnected.tsx", "hooks/useApproveConfirmTransaction.ts", "views/Profile/components/SelectionCard.tsx", "views/Profile/components/NextStepButton.tsx", "views/Profile/ProfileCreation/contexts/hook.ts", "views/Profile/ProfileCreation/Mint.tsx", "state/collectibles/hooks.ts", "views/Profile/ProfileCreation/ProfilePicture.tsx", "views/Profile/ProfileCreation/TeamSelection.tsx", "state/teams/hooks.ts", "../node_modules/date-fns/esm/compareAsc/index.js", "../node_modules/date-fns/esm/isLastDayOfMonth/index.js", "../node_modules/date-fns/esm/differenceInMonths/index.js", "../node_modules/date-fns/esm/differenceInMilliseconds/index.js", "../node_modules/date-fns/esm/differenceInSeconds/index.js", "../node_modules/date-fns/esm/_lib/cloneObject/index.js", "../node_modules/date-fns/esm/formatDistance/index.js", "views/Profile/ProfileCreation/UserName.tsx", "views/Profile/components/ConfirmProfileCreationModal.tsx", "views/Profile/components/EditProfileModal/reducer.ts", "views/Profile/ProfileCreation/Steps.tsx", "views/Profile/ProfileCreation/index.tsx", "views/Profile/components/ClaimGiftModal.tsx", "views/Profile/components/HeaderWrapper.tsx", "views/Profile/hooks/useGetProfileCosts.ts", "views/Profile/components/EditProfileModal/StartView.tsx", "views/Profile/components/EditProfileModal/PauseProfileView.tsx", "views/Profile/components/EditProfileModal/ChangeProfilePicView.tsx", "views/Profile/components/EditProfileModal/ApproveCakeView.tsx", "views/Profile/components/EditProfileModal/index.tsx", "views/Profile/components/Header.tsx", "views/Profile/components/AchievementAvatar.tsx", "views/Profile/components/AchievementTitle.tsx", "views/Profile/components/AchievementDescription.tsx", "views/Profile/components/AchievementCard.tsx", "views/Profile/components/AchievementsList.tsx", "state/achievements/hooks.ts", "views/Profile/components/ActionColumn.tsx", "views/Profile/components/AchievementRow/PointsLabel.tsx", "views/Profile/components/AchievementRow/index.tsx", "views/Profile/components/ClaimPointsCallout .tsx", "views/Profile/components/ComingSoon.tsx", "views/Profile/components/Menu.tsx", "views/Profile/TaskCenter.tsx", "views/Profile/components/CardHeader.tsx", "views/Profile/components/CollectibleCard.tsx", "views/Profile/components/Collectibles.tsx", "views/Profile/components/SecondaryCard.tsx", "views/Profile/components/StatBox.tsx", "views/Profile/components/EditProfileAvatar.tsx", "views/Profile/PublicProfile.tsx", "views/Profile/index.tsx", "components/ProfileAvatarWithTeam.tsx", "../node_modules/lodash/_shuffleSelf.js", "../node_modules/lodash/shuffle.js", "../node_modules/lodash/_arrayShuffle.js", "../node_modules/lodash/_baseShuffle.js"], "names": ["ButtonArrangement", "MINT_COST", "parseUnits", "REGISTER_COST", "STARTER_BUNNY_IDENTIFIERS", "totalCost", "add", "allowance", "mul", "initialState", "isInitialized", "currentStep", "teamId", "selectedNft", "nftAddress", "tokenId", "userName", "minimumCakeRequired", "reducer", "state", "action", "type", "step", "ProfileCreationContext", "createContext", "ProfileCreationProvider", "children", "useReducer", "dispatch", "account", "useWeb3React", "useEffect", "isSubscribed", "a", "bunnyFactoryContract", "getBunnyFactoryContract", "canMint", "fetchData", "actions", "useMemo", "nextStep", "setTeamId", "setSelectedNft", "setUserName", "Provider", "value", "Wrapper", "styled", "div", "theme", "colors", "textSubtle", "steps", "Header", "t", "useTranslation", "useContext", "as", "scale", "color", "mb", "id", "map", "translationKey", "index", "WalletNotConnected", "ConnectWalletButton", "approvalState", "confirmState", "useApproveConfirmTransaction", "onApprove", "onConfirm", "onRequiresApproval", "onSuccess", "noop", "onApproveSuccess", "handlePreApprove", "useRef", "toastError", "useToast", "current", "then", "result", "isApproving", "isApproved", "isConfirming", "isConfirmed", "handleApprove", "tx", "wait", "receipt", "status", "handleConfirm", "StyledApproveConfirmButtonRow", "mediaQueries", "md", "Button", "UIKitButton", "iconAttrs", "width", "ChevronRight", "ChevronRightIcon", "attrs", "ChevronBottom", "ChevronDownIcon", "spinnerIcon", "spin", "ApproveConfirmButtons", "isApproveDisabled", "isConfirmDisabled", "buttonArrangement", "ROW", "confirmLabel", "confirmId", "confirmButtonText", "disabled", "onClick", "endIcon", "undefined", "isLoading", "justifyContent", "Label", "label", "isDisabled", "Body", "Children", "StyledBackgroundImage", "src", "SelectionCard", "name", "isChecked", "image", "onChange", "props", "isSuccess", "checked", "e", "target", "style", "flex", "NextStepButton", "useProfileCreation", "nfts", "nftList", "pancake", "filter", "nft", "includes", "identifier", "Mint", "useState", "variationId", "setVariationId", "cakeContract", "useCake", "useBunnyFactory", "useGetCakeBalance", "cakeBalance", "balance", "hasMinimumCakeRequired", "fetchStatus", "FetchStatus", "SUCCESS", "gte", "callWithGasPrice", "useCallWithGasPrice", "address", "response", "toString", "fontSize", "bold", "num", "formatUnits", "images", "Number", "useGetCollectibles", "useAppDispatch", "useSelector", "collectibles", "data", "identifiers", "Object", "keys", "fetchWalletNfts", "tokenIds", "nftsInWallet", "Nfts", "Link", "RouterLink", "primary", "NftWrapper", "ProfilePicture", "library", "setIsApproved", "setIsApproving", "contract", "getErc721Contract", "getSigner", "getPancakeProfileAddress", "length", "to", "marginLeft", "height", "walletNft", "firstTokenId", "getBunnyNftAddress", "parseInt", "Team", "currentTeamId", "teams", "fetchTeams", "useTeams", "handleTeamSelection", "teamValues", "shuffle", "values", "team", "isJoinable", "mr", "users", "toLocaleString", "compareAsc", "dirtyDateLeft", "dirtyDateRight", "requiredArgs", "arguments", "dateLeft", "toDate", "dateRight", "diff", "getTime", "isLastDayOfMonth", "dirtyDate", "date", "endOfDay", "endOfMonth", "differenceInMonths", "sign", "difference", "Math", "abs", "differenceInCalendarMonths", "getMonth", "getDate", "setDate", "setMonth", "isLastMonthNotFull", "differenceInMilliseconds", "differenceInSeconds", "floor", "ceil", "cloneObject", "dirtyObject", "assign", "MINUTES_IN_DAY", "MINUTES_IN_MONTH", "formatDistance", "dirtyBaseDate", "options", "locale", "defaultLocale", "RangeError", "comparison", "isNaN", "localizeOptions", "addSuffix", "Boolean", "months", "seconds", "offsetInSeconds", "getTimezoneOffsetInMilliseconds", "minutes", "round", "includeSeconds", "hours", "days", "nearestMonth", "monthsSinceStartOfYear", "years", "ExistingUserState", "ConfirmProfileCreationModal", "onDismiss", "profileContract", "useProfile", "toastSuccess", "toJSON", "fetchProfile", "Toast", "txHash", "transactionHash", "title", "Views", "InputWrap", "Input", "UIKitInput", "Indicator", "Flex", "UserName", "isAcknowledged", "setIsAcknowledged", "useWeb3Provider", "IDLE", "existingUserState", "setExistingUserState", "isValid", "setIsValid", "setIsLoading", "message", "setMessage", "useModal", "onPresentConfirmProfileCreation", "isUserCreated", "CREATED", "checkUsernameValidity", "debounce", "fetch", "API_PROFILE", "res", "ok", "json", "error", "signMessage", "signature", "method", "headers", "body", "JSON", "stringify", "username", "dateCreated", "parseISO", "created_at", "Date", "NEW", "fetchUser", "event", "isWarning", "minLength", "maxLength", "placeholder", "py", "minHeight", "htmlFor", "display", "cursor", "marginBottom", "alignItems", "ml", "mt", "Steps", "TeamSelection", "ProfileCreation", "Page", "useCanClaim", "canClaim", "setCanClaim", "refresh", "setRefresh", "checkClaimStatus", "useCallback", "prevRefresh", "claimRefundContract", "getClaimRefundContract", "walletCanClaim", "console", "fetchClaimStatus", "ClaimGift", "setIsConfirming", "useClaimRefundContract", "handleClick", "maxWidth", "HeaderWrapper", "currentView", "view", "previousView", "useEditProfile", "START", "goToStart", "goToChange", "CHANGE", "goToRemove", "REMOVE", "goToApprove", "APPROVE", "goPrevious", "useGetProfileCosts", "numberCakeToReactivate", "ethers", "BigNumber", "from", "numberCakeToRegister", "numberCakeToUpdate", "costs", "setCosts", "calls", "multicallv2", "profileABI", "fetchCosts", "DangerOutline", "variant", "failure", "AvatarWrapper", "sm", "StartPage", "needsApproval", "setNeedsApproval", "profile", "isActive", "cost", "lt", "checkApprovalStatus", "flexDirection", "ProfileAvatarWithTeam", "minimum", "formatBigNumber", "PauseProfilePage", "pancakeProfileContract", "useProfileContract", "handleDeactivateProfile", "ChangeProfilePicPage", "ApproveCakePage", "approve", "viewTitle", "EditProfileModal", "isStartView", "handleBack", "onBack", "hideCloseButton", "StartView", "PauseProfileView", "ChangeProfilePicView", "ApproveCakeView", "ProfileHeader", "onPresentClaimGiftModal", "onEditProfileModal", "hasProfile", "startIcon", "NoBadgePlaceholder", "BunnyPlaceholderIcon", "StyledAchievementAvatar", "img", "AchievementAvatar", "badge", "alt", "AchievementTitle", "key", "Description", "Text", "AchievementDescription", "description", "Details", "AchievementCard", "achievement", "points", "Grid", "AchievementsList", "achievements", "ActionColumn", "PointsLabel", "localePoints", "StyledAchievementRow", "cardBorder", "AchievementRow", "onCollectSuccess", "isCollecting", "setIsCollecting", "pointCenterContract", "usePointCenterIfoContract", "handleCollectPoints", "px", "ClaimPointsCallout", "claimableAchievements", "setClaimableAchievement", "getClaimableIfoData", "ifoData", "fetchIfoClaims", "handleCollectSuccess", "addAchievement", "addPoints", "prevClaimableAchievements", "prevClaimableAchievement", "totalPointsToCollect", "sumBy", "ComingSoon", "p", "Menu", "activeIndex", "TaskCenter", "CardHeader", "UIKitCardHeader", "isDark", "getBackground", "PreviewImage", "CollectibleCard", "lg", "CollectibleList", "Collectibles", "nftInWallet", "SecondaryCard", "tertiary", "defaultProps", "StatBox", "Icon", "icon", "subtitle", "textTransform", "EditOverlay", "StyledEditProfileAvatar", "EditProfileAvatar", "Content", "Username", "Heading", "Status", "ResponsiveText", "AddressLink", "Section", "PublicProfile", "useUserUsernameVisibility", "usernameVisibilityToggled", "setUsernameVisibility", "VisibilityOff", "VisibilityOn", "replace", "href", "getBscScanLink", "external", "outline", "PrizeIcon", "Profile", "fetchAchievements", "useFetchAchievements", "PageLoader", "exact", "path", "TeamAvatar", "card", "background", "bg", "AvatarInactive", "NoProfileAvatarIcon", "baseRandom", "require", "module", "exports", "array", "size", "lastIndex", "rand", "arrayShuffle", "baseShuffle", "isArray", "collection", "copyArray", "shuffleSelf"], "mappings": "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", "file": "static/js/4.2559ef0f.chunk.js", "sourcesContent": ["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronRightIcon, Button as UIKitButton, AutoRenewIcon, ChevronDownIcon, Box, Flex } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nexport enum ButtonArrangement {\r\n  ROW = 'row',\r\n  SEQUENTIAL = 'sequential',\r\n}\r\n\r\ninterface ApproveConfirmButtonsProps {\r\n  isApproveDisabled: boolean\r\n  isApproving: boolean\r\n  isConfirming: boolean\r\n  isConfirmDisabled: boolean\r\n  onApprove: () => void\r\n  onConfirm: () => void\r\n  buttonArrangement?: ButtonArrangement\r\n  confirmLabel?: string\r\n  confirmId?: string\r\n}\r\n\r\nconst StyledApproveConfirmButtonRow = styled.div`\r\n  align-items: center;\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  justify-content: center;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-template-columns: 1fr 24px 1fr;\r\n  }\r\n`\r\n\r\nconst Button = styled(UIKitButton)`\r\n  width: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    min-width: 160px;\r\n  }\r\n`\r\n\r\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\r\n\r\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\r\n  display: none;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\r\n  display: block;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\r\n\r\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\r\n  isApproveDisabled,\r\n  isApproving,\r\n  isConfirming,\r\n  isConfirmDisabled,\r\n  onApprove,\r\n  onConfirm,\r\n  buttonArrangement = ButtonArrangement.ROW,\r\n  confirmLabel,\r\n  confirmId,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const confirmButtonText = confirmLabel ?? t('Confirm')\r\n\r\n  const ApproveConfirmRow = () => {\r\n    return (\r\n      <StyledApproveConfirmButtonRow>\r\n        <Box>\r\n          <Button\r\n            disabled={isApproveDisabled}\r\n            onClick={onApprove}\r\n            endIcon={isApproving ? spinnerIcon : undefined}\r\n            isLoading={isApproving}\r\n          >\r\n            {isApproving ? t('Enabling') : t('Enable')}\r\n          </Button>\r\n        </Box>\r\n        <Flex justifyContent=\"center\">\r\n          <ChevronRight />\r\n          <ChevronBottom />\r\n        </Flex>\r\n        <Box>\r\n          <Button\r\n            id={confirmId}\r\n            onClick={onConfirm}\r\n            disabled={isConfirmDisabled}\r\n            isLoading={isConfirming}\r\n            endIcon={isConfirming ? spinnerIcon : undefined}\r\n          >\r\n            {isConfirming ? t('Confirming') : confirmButtonText}\r\n          </Button>\r\n        </Box>\r\n      </StyledApproveConfirmButtonRow>\r\n    )\r\n  }\r\n\r\n  const ApproveConfirmSequential = () => {\r\n    return (\r\n      <>\r\n        {isApproveDisabled ? (\r\n          <Box>\r\n            <Button\r\n              id={confirmId}\r\n              onClick={onConfirm}\r\n              disabled={isConfirmDisabled}\r\n              isLoading={isConfirming}\r\n              endIcon={isConfirming ? spinnerIcon : undefined}\r\n            >\r\n              {isConfirming ? t('Confirming') : confirmButtonText}\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <Box>\r\n            <Button onClick={onApprove} endIcon={isApproving ? spinnerIcon : undefined} isLoading={isApproving}>\r\n              {isApproving ? t('Enabling') : t('Enable')}\r\n            </Button>\r\n          </Box>\r\n        )}\r\n      </>\r\n    )\r\n  }\r\n\r\n  return buttonArrangement === ButtonArrangement.ROW ? ApproveConfirmRow() : ApproveConfirmSequential()\r\n}\r\n\r\nexport default ApproveConfirmButtons\r\n", "import { parseUnits } from '@ethersproject/units'\r\n\r\nexport const MINT_COST = parseUnits('1')\r\nexport const REGISTER_COST = parseUnits('0.5')\r\nexport const ALLOWANCE_MULTIPLIER = 5\r\nexport const STARTER_BUNNY_IDENTIFIERS = ['sleepy', 'dollop', 'twinkle', 'churro', 'sunny']\r\nexport const USERNAME_MIN_LENGTH = 3\r\nexport const USERNAME_MAX_LENGTH = 15\r\n", "import React, { createContext, useEffect, useMemo, useReducer } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getBunnyFactoryContract } from 'utils/contractHelpers'\r\nimport { MINT_COST, REGISTER_COST, ALLOWANCE_MULTIPLIER } from '../config'\r\nimport { Actions, State, ContextType } from './types'\r\n\r\nconst totalCost = MINT_COST.add(REGISTER_COST)\r\nconst allowance = totalCost.mul(ALLOWANCE_MULTIPLIER)\r\n\r\nconst initialState: State = {\r\n  isInitialized: false,\r\n  currentStep: 0,\r\n  teamId: null,\r\n  selectedNft: {\r\n    nftAddress: null,\r\n    tokenId: null,\r\n  },\r\n  userName: '',\r\n  minimumCakeRequired: totalCost,\r\n  allowance,\r\n}\r\n\r\nconst reducer = (state: State, action: Actions): State => {\r\n  switch (action.type) {\r\n    case 'initialize':\r\n      return {\r\n        ...state,\r\n        isInitialized: true,\r\n        currentStep: action.step,\r\n      }\r\n    case 'next_step':\r\n      return {\r\n        ...state,\r\n        currentStep: state.currentStep + 1,\r\n      }\r\n    case 'set_team':\r\n      return {\r\n        ...state,\r\n        teamId: action.teamId,\r\n      }\r\n    case 'set_selected_nft':\r\n      return {\r\n        ...state,\r\n        selectedNft: {\r\n          tokenId: action.tokenId,\r\n          nftAddress: action.nftAddress,\r\n        },\r\n      }\r\n    case 'set_username':\r\n      return {\r\n        ...state,\r\n        userName: action.userName,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const ProfileCreationContext = createContext<ContextType>(null)\r\n\r\nconst ProfileCreationProvider: React.FC = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  const { account } = useWeb3React()\r\n\r\n  // Initial checks\r\n  useEffect(() => {\r\n    let isSubscribed = true\r\n\r\n    const fetchData = async () => {\r\n      const bunnyFactoryContract = getBunnyFactoryContract()\r\n      const canMint = await bunnyFactoryContract.canMint(account)\r\n      dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\r\n\r\n      // When changing wallets quickly unmounting before the hasClaim finished causes a React error\r\n      if (isSubscribed) {\r\n        dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchData()\r\n    }\r\n\r\n    return () => {\r\n      isSubscribed = false\r\n    }\r\n  }, [account, dispatch])\r\n\r\n  const actions: ContextType['actions'] = useMemo(\r\n    () => ({\r\n      nextStep: () => dispatch({ type: 'next_step' }),\r\n      setTeamId: (teamId: number) => dispatch({ type: 'set_team', teamId }),\r\n      setSelectedNft: (tokenId: number, nftAddress: string) =>\r\n        dispatch({ type: 'set_selected_nft', tokenId, nftAddress }),\r\n      setUserName: (userName: string) => dispatch({ type: 'set_username', userName }),\r\n    }),\r\n    [dispatch],\r\n  )\r\n\r\n  return <ProfileCreationContext.Provider value={{ ...state, actions }}>{children}</ProfileCreationContext.Provider>\r\n}\r\n\r\nexport default ProfileCreationProvider\r\n", "import React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Breadcrumbs, Heading, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\r\n\r\nconst Wrapper = styled.div`\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\r\n  margin-bottom: 24px;\r\n  padding-bottom: 24px;\r\n`\r\n\r\nconst steps = ['Get Starter Collectible', 'Set Profile Picture', 'Join Team', 'Set Name']\r\n\r\nconst Header: React.FC = () => {\r\n  const { t } = useTranslation()\r\n  const { currentStep } = useContext(ProfileCreationContext)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"8px\" id=\"profile-setup-title\">\r\n        {t('Profile Setup')}\r\n      </Heading>\r\n      <Heading as=\"h2\" scale=\"lg\" mb=\"8px\">\r\n        {t('Show off your stats and collectibles with your unique profile')}\r\n      </Heading>\r\n      <Text color=\"textSubtle\" mb=\"24px\">\r\n        {t('Total cost: 1.5 CAKE')}\r\n      </Text>\r\n      <Breadcrumbs>\r\n        {steps.map((translationKey, index) => {\r\n          return (\r\n            <Text key={translationKey} color={index <= currentStep ? 'text' : 'textDisabled'}>\r\n              {t(translationKey)}\r\n            </Text>\r\n          )\r\n        })}\r\n      </Breadcrumbs>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Header\r\n", "import React from 'react'\r\nimport { Heading, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\n\r\nconst WalletNotConnected = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <div>\r\n      <Heading scale=\"xl\" mb=\"8px\">\r\n        {t('Oops!')}\r\n      </Heading>\r\n      <Text as=\"p\" mb=\"16px\">\r\n        {t('Please connect your wallet to continue')}\r\n      </Text>\r\n      <ConnectWalletButton />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WalletNotConnected\r\n", "import { useEffect, useReducer, useRef } from 'react'\r\nimport { noop } from 'lodash'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { ethers } from 'ethers'\r\nimport useToast from 'hooks/useToast'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\r\n\r\ntype Action =\r\n  | { type: 'requires_approval' }\r\n  | { type: 'approve_sending' }\r\n  | { type: 'approve_receipt' }\r\n  | { type: 'approve_error' }\r\n  | { type: 'confirm_sending' }\r\n  | { type: 'confirm_receipt' }\r\n  | { type: 'confirm_error' }\r\n\r\ninterface State {\r\n  approvalState: LoadingState\r\n  confirmState: LoadingState\r\n}\r\n\r\nconst initialState: State = {\r\n  approvalState: 'idle',\r\n  confirmState: 'idle',\r\n}\r\n\r\nconst reducer = (state: State, actions: Action): State => {\r\n  switch (actions.type) {\r\n    case 'requires_approval':\r\n      return {\r\n        ...state,\r\n        approvalState: 'success',\r\n      }\r\n    case 'approve_sending':\r\n      return {\r\n        ...state,\r\n        approvalState: 'loading',\r\n      }\r\n    case 'approve_receipt':\r\n      return {\r\n        ...state,\r\n        approvalState: 'success',\r\n      }\r\n    case 'approve_error':\r\n      return {\r\n        ...state,\r\n        approvalState: 'fail',\r\n      }\r\n    case 'confirm_sending':\r\n      return {\r\n        ...state,\r\n        confirmState: 'loading',\r\n      }\r\n    case 'confirm_receipt':\r\n      return {\r\n        ...state,\r\n        confirmState: 'success',\r\n      }\r\n    case 'confirm_error':\r\n      return {\r\n        ...state,\r\n        confirmState: 'fail',\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\ninterface OnSuccessProps {\r\n  state: State\r\n  receipt: ethers.providers.TransactionReceipt\r\n}\r\n\r\ninterface ApproveConfirmTransaction {\r\n  onApprove: () => Promise<ethers.providers.TransactionResponse>\r\n  onConfirm: () => Promise<ethers.providers.TransactionResponse>\r\n  onRequiresApproval?: () => Promise<boolean>\r\n  onSuccess: ({ state, receipt }: OnSuccessProps) => void\r\n  onApproveSuccess?: ({ state, receipt }: OnSuccessProps) => void\r\n}\r\n\r\nconst useApproveConfirmTransaction = ({\r\n  onApprove,\r\n  onConfirm,\r\n  onRequiresApproval,\r\n  onSuccess = noop,\r\n  onApproveSuccess = noop,\r\n}: ApproveConfirmTransaction) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  const handlePreApprove = useRef(onRequiresApproval)\r\n  const { toastError } = useToast()\r\n\r\n  // Check if approval is necessary, re-check if account changes\r\n  useEffect(() => {\r\n    if (account && handlePreApprove.current) {\r\n      handlePreApprove.current().then((result) => {\r\n        if (result) {\r\n          dispatch({ type: 'requires_approval' })\r\n        }\r\n      })\r\n    }\r\n  }, [account, handlePreApprove, dispatch])\r\n\r\n  return {\r\n    isApproving: state.approvalState === 'loading',\r\n    isApproved: state.approvalState === 'success',\r\n    isConfirming: state.confirmState === 'loading',\r\n    isConfirmed: state.confirmState === 'success',\r\n    handleApprove: async () => {\r\n      try {\r\n        const tx = await onApprove()\r\n        dispatch({ type: 'approve_sending' })\r\n        const receipt = await tx.wait()\r\n        if (receipt.status) {\r\n          dispatch({ type: 'approve_receipt' })\r\n          onApproveSuccess({ state, receipt })\r\n        }\r\n      } catch (error) {\r\n        dispatch({ type: 'approve_error' })\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      }\r\n    },\r\n    handleConfirm: async () => {\r\n      dispatch({ type: 'confirm_sending' })\r\n      try {\r\n        const tx = await onConfirm()\r\n        const receipt = await tx.wait()\r\n        if (receipt.status) {\r\n          dispatch({ type: 'confirm_receipt' })\r\n          onSuccess({ state, receipt })\r\n        }\r\n      } catch (error) {\r\n        dispatch({ type: 'confirm_error' })\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      }\r\n    },\r\n  }\r\n}\r\n\r\nexport default useApproveConfirmTransaction\r\n", "import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, Radio } from '@pancakeswap/uikit'\r\n\r\ninterface SelectionCardProps {\r\n  name: string\r\n  value: string | number\r\n  isChecked?: boolean\r\n  onChange: (val: any) => void\r\n  image: string\r\n  disabled?: boolean\r\n}\r\n\r\nconst Label = styled.label<{ isDisabled: boolean }>`\r\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  opacity: ${({ isDisabled }) => (isDisabled ? '0.6' : '1')};\r\n`\r\n\r\nconst Body = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-grow: 1;\r\n  height: 80px;\r\n  padding: 8px 16px;\r\n`\r\n\r\nconst Children = styled.div`\r\n  margin-left: 16px;\r\n`\r\n\r\nconst StyledBackgroundImage = styled.div<{ src: string }>`\r\n  align-self: stretch;\r\n  background-image: url('${({ src }) => src}');\r\n  background-size: contain;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  flex: none;\r\n  width: 80px;\r\n`\r\n\r\nconst SelectionCard: React.FC<SelectionCardProps> = ({\r\n  name,\r\n  value,\r\n  isChecked = false,\r\n  image,\r\n  onChange,\r\n  disabled,\r\n  children,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <Card isSuccess={isChecked} isDisabled={disabled} mb=\"16px\" {...props}>\r\n      <Label isDisabled={disabled}>\r\n        <Body>\r\n          <Radio\r\n            name={name}\r\n            checked={isChecked}\r\n            value={value}\r\n            onChange={(e) => onChange(e.target.value)}\r\n            disabled={disabled}\r\n            style={{ flex: 'none' }}\r\n          />\r\n          <Children>{children}</Children>\r\n        </Body>\r\n        <StyledBackgroundImage src={image} />\r\n      </Label>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default SelectionCard\r\n", "import React from 'react'\r\nimport { ArrowForwardIcon, Button, ButtonProps } from '@pancakeswap/uikit'\r\n\r\nconst NextStepButton: React.FC<ButtonProps> = (props) => {\r\n  return <Button endIcon={<ArrowForwardIcon color=\"currentColor\" />} {...props} />\r\n}\r\n\r\nexport default NextStepButton\r\n", "import { useContext } from 'react'\r\nimport { ProfileCreationContext } from './ProfileCreationProvider'\r\n\r\nconst useProfileCreation = () => {\r\n  return useContext(ProfileCreationContext)\r\n}\r\n\r\nexport default useProfileCreation\r\n", "import React, { useState } from 'react'\r\nimport { formatUnits } from '@ethersproject/units'\r\nimport { Card, CardBody, Heading, Text } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\r\nimport { useCake, useBunnyFactory } from 'hooks/useContract'\r\nimport { Nft } from 'config/constants/nfts/types'\r\nimport { FetchStatus, useGetCakeBalance } from 'hooks/useTokenBalance'\r\nimport nftList from 'config/constants/nfts'\r\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\r\nimport ApproveConfirmButtons from 'components/ApproveConfirmButtons'\r\nimport SelectionCard from '../components/SelectionCard'\r\nimport NextStepButton from '../components/NextStepButton'\r\nimport useProfileCreation from './contexts/hook'\r\nimport { MINT_COST, STARTER_BUNNY_IDENTIFIERS } from './config'\r\n\r\nconst nfts = nftList.pancake.filter((nft) => STARTER_BUNNY_IDENTIFIERS.includes(nft.identifier))\r\n\r\nconst Mint: React.FC = () => {\r\n  const [variationId, setVariationId] = useState<Nft['id']>(null)\r\n  const { actions, minimumCakeRequired, allowance } = useProfileCreation()\r\n\r\n  const { account } = useWeb3React()\r\n  const cakeContract = useCake()\r\n  const bunnyFactoryContract = useBunnyFactory()\r\n  const { t } = useTranslation()\r\n  const { balance: cakeBalance, fetchStatus } = useGetCakeBalance()\r\n  const hasMinimumCakeRequired = fetchStatus === FetchStatus.SUCCESS && cakeBalance.gte(MINT_COST)\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n\r\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\r\n    useApproveConfirmTransaction({\r\n      onRequiresApproval: async () => {\r\n        // TODO: Move this to a helper, this check will be probably be used many times\r\n        try {\r\n          const response = await cakeContract.allowance(account, bunnyFactoryContract.address)\r\n          return response.gte(minimumCakeRequired)\r\n        } catch (error) {\r\n          return false\r\n        }\r\n      },\r\n      onApprove: () => {\r\n        return callWithGasPrice(cakeContract, 'approve', [bunnyFactoryContract.address, allowance.toString()])\r\n      },\r\n      onConfirm: () => {\r\n        return callWithGasPrice(bunnyFactoryContract, 'mintNFT', [variationId])\r\n      },\r\n      onSuccess: () => actions.nextStep(),\r\n    })\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {t('Step %num%', { num: 1 })}\r\n      </Text>\r\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\r\n        {t('Get Starter Collectible')}\r\n      </Heading>\r\n      <Text as=\"p\">{t('Every profile starts by making a “starter” collectible (NFT).')}</Text>\r\n      <Text as=\"p\">{t('This starter will also become your first profile picture.')}</Text>\r\n      <Text as=\"p\" mb=\"24px\">\r\n        {t('You can change your profile pic later if you get another approved Pancake Collectible.')}\r\n      </Text>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\r\n            {t('Choose your Starter!')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\">\r\n            {t('Choose wisely: you can only ever make one starter collectible!')}\r\n          </Text>\r\n          <Text as=\"p\" mb=\"24px\" color=\"textSubtle\">\r\n            {t('Cost: %num% CAKE', { num: formatUnits(MINT_COST) })}\r\n          </Text>\r\n          {nfts.map((nft) => {\r\n            const handleChange = (value: string) => setVariationId(Number(value))\r\n\r\n            return (\r\n              <SelectionCard\r\n                key={nft.identifier}\r\n                name=\"mintStarter\"\r\n                value={nft.id}\r\n                image={`/images/nfts/${nft.images.md}`}\r\n                isChecked={variationId === nft.id}\r\n                onChange={handleChange}\r\n                disabled={isApproving || isConfirming || isConfirmed || !hasMinimumCakeRequired}\r\n              >\r\n                <Text bold>{nft.name}</Text>\r\n              </SelectionCard>\r\n            )\r\n          })}\r\n          {!hasMinimumCakeRequired && (\r\n            <Text color=\"failure\" mb=\"16px\">\r\n              {t('A minimum of %num% CAKE is required', { num: formatUnits(MINT_COST) })}\r\n            </Text>\r\n          )}\r\n          <ApproveConfirmButtons\r\n            isApproveDisabled={variationId === null || isConfirmed || isConfirming || isApproved}\r\n            isApproving={isApproving}\r\n            isConfirmDisabled={!isApproved || isConfirmed || !hasMinimumCakeRequired}\r\n            isConfirming={isConfirming}\r\n            onApprove={handleApprove}\r\n            onConfirm={handleConfirm}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n      <NextStepButton onClick={actions.nextStep} disabled={!isConfirmed}>\r\n        {t('Next Step')}\r\n      </NextStepButton>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Mint\r\n", "import { useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useSelector } from 'react-redux'\r\nimport { useAppDispatch } from 'state'\r\nimport Nfts from 'config/constants/nfts'\r\nimport { State } from '../types'\r\nimport { fetchWalletNfts } from './index'\r\n\r\nexport const useGetCollectibles = () => {\r\n  const { account } = useWeb3React()\r\n  const dispatch = useAppDispatch()\r\n  const { isInitialized, isLoading, data } = useSelector((state: State) => state.collectibles)\r\n\r\n  const identifiers = Object.keys(data)\r\n\r\n  useEffect(() => {\r\n    // Fetch nfts only if we have not done so already\r\n    if (!isInitialized && account) {\r\n      dispatch(fetchWalletNfts(account))\r\n    }\r\n  }, [isInitialized, account, dispatch])\r\n\r\n  return {\r\n    isInitialized,\r\n    isLoading,\r\n    tokenIds: data,\r\n    nftsInWallet: Nfts.pancake.filter((nft) => identifiers.includes(nft.identifier)),\r\n  }\r\n}\r\n", "import React, { useContext, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { AutoRenewIcon, Button, Card, CardBody, Heading, Skeleton, Text } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport { getBunnyNftAddress } from 'utils/collectibles'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\nimport { getErc721Contract } from 'utils/contractHelpers'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useGetCollectibles } from 'state/collectibles/hooks'\r\nimport useToast from 'hooks/useToast'\r\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\r\nimport SelectionCard from '../components/SelectionCard'\r\nimport NextStepButton from '../components/NextStepButton'\r\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\r\n\r\nconst Link = styled(RouterLink)`\r\n  color: ${({ theme }) => theme.colors.primary};\r\n`\r\n\r\nconst NftWrapper = styled.div`\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst ProfilePicture: React.FC = () => {\r\n  const { library } = useWeb3React()\r\n  const [isApproved, setIsApproved] = useState(false)\r\n  const [isApproving, setIsApproving] = useState(false)\r\n  const { selectedNft, actions } = useContext(ProfileCreationContext)\r\n\r\n  const { t } = useTranslation()\r\n  const { isLoading, nftsInWallet, tokenIds } = useGetCollectibles()\r\n  const { toastError } = useToast()\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n\r\n  const handleApprove = async () => {\r\n    const contract = getErc721Contract(selectedNft.nftAddress, library.getSigner())\r\n    const tx = await callWithGasPrice(contract, 'approve', [getPancakeProfileAddress(), selectedNft.tokenId])\r\n    setIsApproving(true)\r\n    const receipt = await tx.wait()\r\n    if (receipt.status) {\r\n      setIsApproving(false)\r\n      setIsApproved(true)\r\n    } else {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      setIsApproving(false)\r\n    }\r\n  }\r\n\r\n  if (!isLoading && nftsInWallet.length === 0) {\r\n    return (\r\n      <>\r\n        <Heading scale=\"xl\" mb=\"24px\">\r\n          {t('Oops!')}\r\n        </Heading>\r\n        <Text bold fontSize=\"20px\" mb=\"24px\">\r\n          {t('We couldn’t find any Pancake Collectibles in your wallet.')}\r\n        </Text>\r\n        <Text as=\"p\">\r\n          {t(\r\n            'You need a Pancake Collectible to finish setting up your profile. If you sold or transferred your starter collectible to another wallet, you’ll need to get it back or acquire a new one somehow. You can’t make a new starter with this wallet address.',\r\n          )}\r\n        </Text>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {t('Step %num%', { num: 2 })}\r\n      </Text>\r\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\r\n        {t('Set Profile Picture')}\r\n      </Heading>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\r\n            {t('Choose collectible')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\">\r\n            {t('Choose a profile picture from the eligible collectibles (NFT) in your wallet, shown below.')}\r\n          </Text>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {t('Only approved Pancake Collectibles can be used.')}\r\n            <Link to=\"/collectibles\" style={{ marginLeft: '4px' }}>\r\n              {t('See the list >')}\r\n            </Link>\r\n          </Text>\r\n          <NftWrapper>\r\n            {isLoading ? (\r\n              <Skeleton height=\"80px\" mb=\"16px\" />\r\n            ) : (\r\n              nftsInWallet.map((walletNft) => {\r\n                const [firstTokenId] = tokenIds[walletNft.identifier]\r\n                const address = getBunnyNftAddress()\r\n\r\n                return (\r\n                  <SelectionCard\r\n                    name=\"profilePicture\"\r\n                    key={walletNft.identifier}\r\n                    value={firstTokenId}\r\n                    image={`/images/nfts/${walletNft.images.md}`}\r\n                    isChecked={firstTokenId === selectedNft.tokenId}\r\n                    onChange={(value: string) => actions.setSelectedNft(parseInt(value, 10), address)}\r\n                  >\r\n                    <Text bold>{walletNft.name}</Text>\r\n                  </SelectionCard>\r\n                )\r\n              })\r\n            )}\r\n          </NftWrapper>\r\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\r\n            {t('Allow collectible to be locked')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\r\n            {t(\r\n              \"The collectible you've chosen will be locked in a smart contract while it’s being used as your profile picture. Don't worry - you'll be able to get it back at any time.\",\r\n            )}\r\n          </Text>\r\n          <Button\r\n            isLoading={isApproving}\r\n            disabled={isApproved || isApproving || selectedNft.tokenId === null}\r\n            onClick={handleApprove}\r\n            endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\r\n            id=\"approveStarterCollectible\"\r\n          >\r\n            {t('Enable')}\r\n          </Button>\r\n        </CardBody>\r\n      </Card>\r\n      <NextStepButton onClick={actions.nextStep} disabled={selectedNft.tokenId === null || !isApproved || isApproving}>\r\n        {t('Next Step')}\r\n      </NextStepButton>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProfilePicture\r\n", "import React, { useMemo } from 'react'\r\nimport { Card, CardBody, CommunityIcon, Flex, Heading, Text } from '@pancakeswap/uikit'\r\nimport shuffle from 'lodash/shuffle'\r\nimport { useTeams } from 'state/teams/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport SelectionCard from '../components/SelectionCard'\r\nimport NextStepButton from '../components/NextStepButton'\r\nimport useProfileCreation from './contexts/hook'\r\n\r\nconst Team: React.FC = () => {\r\n  const { teamId: currentTeamId, actions } = useProfileCreation()\r\n  const { t } = useTranslation()\r\n  const { teams } = useTeams()\r\n  const handleTeamSelection = (value: string) => actions.setTeamId(parseInt(value, 10))\r\n  const teamValues = useMemo(() => shuffle(Object.values(teams)), [teams])\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {t('Step %num%', { num: 3 })}\r\n      </Text>\r\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\r\n        {t('Join a Team')}\r\n      </Heading>\r\n      <Text as=\"p\" mb=\"24px\">\r\n        {t('It won’t be possible to undo the choice you make for the foreseeable future!')}\r\n      </Text>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\r\n            {t('Join a Team')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {t(\r\n              'There’s currently no big difference between teams, and no benefit of joining one team over another for now. So pick whichever one you like!',\r\n            )}\r\n          </Text>\r\n          {teamValues &&\r\n            teamValues.map((team) => {\r\n              return (\r\n                <SelectionCard\r\n                  key={team.name}\r\n                  name=\"teams-selection\"\r\n                  value={team.id}\r\n                  isChecked={currentTeamId === team.id}\r\n                  image={`/images/teams/${team.images.md}`}\r\n                  onChange={handleTeamSelection}\r\n                  disabled={!team.isJoinable}\r\n                >\r\n                  <Text bold>{team.name}</Text>\r\n                  <Flex>\r\n                    <CommunityIcon mr=\"8px\" />\r\n                    <Text>{team.users.toLocaleString()}</Text>\r\n                  </Flex>\r\n                </SelectionCard>\r\n              )\r\n            })}\r\n        </CardBody>\r\n      </Card>\r\n      <NextStepButton onClick={actions.nextStep} disabled={currentTeamId === null}>\r\n        {t('Next Step')}\r\n      </NextStepButton>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Team\r\n", "import { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useAppDispatch } from 'state'\r\nimport { Team } from 'config/constants/types'\r\nimport { State, TeamsState } from '../types'\r\nimport { fetchTeam, fetchTeams } from '.'\r\n\r\nexport const useTeam = (id: number) => {\r\n  const team: Team = useSelector((state: State) => state.teams.data[id])\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTeam(id))\r\n  }, [id, dispatch])\r\n\r\n  return team\r\n}\r\n\r\nexport const useTeams = () => {\r\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTeams())\r\n  }, [dispatch])\r\n\r\n  return { teams: data, isInitialized, isLoading }\r\n}\r\n", "import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\n\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}", "import toDate from \"../toDate/index.js\";\nimport endOfDay from \"../endOfDay/index.js\";\nimport endOfMonth from \"../endOfMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * var result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\n\nexport default function isLastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return endOfDay(date).getTime() === endOfMonth(date).getTime();\n}", "import toDate from \"../toDate/index.js\";\nimport differenceInCalendarMonths from \"../differenceInCalendarMonths/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport isLastDayOfMonth from \"../isLastDayOfMonth/index.js\";\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\n\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\n  var result; // Check for the difference of less than month\n\n  if (difference < 1) {\n    result = 0;\n  } else {\n    if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {\n      // This will check if the date is end of Feb and assign a higher end of month date\n      // to compare it with Jan\n      dateLeft.setDate(30);\n    }\n\n    dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n    // If so, result must be decreased by 1 in absolute value\n\n    var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign; // Check for cases of one full calendar month\n\n    if (isLastDayOfMonth(toDate(dirtyDateLeft)) && difference === 1 && compareAsc(dirtyDateLeft, dateRight) === 1) {\n      isLastMonthNotFull = false;\n    }\n\n    result = sign * (difference - Number(isLastMonthNotFull));\n  } // Prevent negative zero\n\n\n  return result === 0 ? 0 : result;\n}", "import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\n\nexport default function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getTime() - dateRight.getTime();\n}", "import differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of seconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\n\nexport default function differenceInSeconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1000;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}", "import assign from \"../assign/index.js\";\nexport default function cloneObject(dirtyObject) {\n  return assign({}, dirtyObject);\n}", "import compareAsc from \"../compareAsc/index.js\";\nimport differenceInMonths from \"../differenceInMonths/index.js\";\nimport differenceInSeconds from \"../differenceInSeconds/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport cloneObject from \"../_lib/cloneObject/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWords ` to `formatDistance`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWords(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *\n *   // v2.0.0 onward\n *\n *   formatDistance(\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistance(dirtyDate, dirtyBaseDate) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  requiredArgs(2, arguments);\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months; // 0 up to 2 mins\n\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', null, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    } // 2 mins up to 0.75 hrs\n\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n\n  months = differenceInMonths(dateRight, dateLeft); // 2 months up to 12 months\n\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12); // N years up to 1 years 3 months\n\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}", "import React, { ChangeEvent, useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Heading,\r\n  Text,\r\n  Input as UIKitInput,\r\n  Button,\r\n  AutoRenewIcon,\r\n  CheckmarkIcon,\r\n  Flex,\r\n  WarningIcon,\r\n  useModal,\r\n  Skeleton,\r\n  Checkbox,\r\n} from '@pancakeswap/uikit'\r\nimport { parseISO, formatDistance } from 'date-fns'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { formatUnits } from '@ethersproject/units'\r\nimport { API_PROFILE } from 'config/constants/endpoints'\r\nimport useToast from 'hooks/useToast'\r\nimport { FetchStatus, useGetCakeBalance } from 'hooks/useTokenBalance'\r\nimport { signMessage } from 'utils/web3React'\r\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport debounce from 'lodash/debounce'\r\nimport ConfirmProfileCreationModal from '../components/ConfirmProfileCreationModal'\r\nimport useProfileCreation from './contexts/hook'\r\nimport { USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH, REGISTER_COST } from './config'\r\n\r\nenum ExistingUserState {\r\n  IDLE = 'idle', // initial state\r\n  CREATED = 'created', // username has already been created\r\n  NEW = 'new', // username has not been created\r\n}\r\n\r\nconst InputWrap = styled.div`\r\n  position: relative;\r\n  max-width: 240px;\r\n`\r\n\r\nconst Input = styled(UIKitInput)`\r\n  padding-right: 40px;\r\n`\r\n\r\nconst Indicator = styled(Flex)`\r\n  align-items: center;\r\n  height: 24px;\r\n  justify-content: center;\r\n  margin-top: -12px;\r\n  position: absolute;\r\n  right: 16px;\r\n  top: 50%;\r\n  width: 24px;\r\n`\r\n\r\nconst UserName: React.FC = () => {\r\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\r\n  const { teamId, selectedNft, userName, actions, minimumCakeRequired, allowance } = useProfileCreation()\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { toastError } = useToast()\r\n  const { library } = useWeb3Provider()\r\n  const [existingUserState, setExistingUserState] = useState<ExistingUserState>(ExistingUserState.IDLE)\r\n  const [isValid, setIsValid] = useState(false)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n  const { balance: cakeBalance, fetchStatus } = useGetCakeBalance()\r\n  const hasMinimumCakeRequired = fetchStatus === FetchStatus.SUCCESS && cakeBalance.gte(REGISTER_COST)\r\n  const [onPresentConfirmProfileCreation] = useModal(\r\n    <ConfirmProfileCreationModal\r\n      userName={userName}\r\n      selectedNft={selectedNft}\r\n      account={account}\r\n      teamId={teamId}\r\n      minimumCakeRequired={minimumCakeRequired}\r\n      allowance={allowance}\r\n    />,\r\n    false,\r\n  )\r\n  const isUserCreated = existingUserState === ExistingUserState.CREATED\r\n\r\n  const checkUsernameValidity = debounce(async (value: string) => {\r\n    try {\r\n      setIsLoading(true)\r\n      const res = await fetch(`${API_PROFILE}/api/users/valid/${value}`)\r\n\r\n      if (res.ok) {\r\n        setIsValid(true)\r\n        setMessage('')\r\n      } else {\r\n        const data = await res.json()\r\n        setIsValid(false)\r\n        setMessage(data?.error?.message)\r\n      }\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }, 200)\r\n\r\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target\r\n    actions.setUserName(value)\r\n    checkUsernameValidity(value)\r\n  }\r\n\r\n  const handleConfirm = async () => {\r\n    try {\r\n      setIsLoading(true)\r\n\r\n      const signature = await signMessage(library, account, userName)\r\n      const response = await fetch(`${API_PROFILE}/api/users/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          address: account,\r\n          username: userName,\r\n          signature,\r\n        }),\r\n      })\r\n\r\n      if (response.ok) {\r\n        setExistingUserState(ExistingUserState.CREATED)\r\n      } else {\r\n        const data = await response.json()\r\n        toastError(t('Error'), data?.error?.message)\r\n      }\r\n    } catch (error) {\r\n      toastError(error?.message ? error.message : JSON.stringify(error))\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleAcknowledge = () => setIsAcknowledged(!isAcknowledged)\r\n\r\n  // Perform an initial check to see if the wallet has already created a username\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const response = await fetch(`${API_PROFILE}/api/users/${account}`)\r\n        const data = await response.json()\r\n\r\n        if (response.ok) {\r\n          const dateCreated = formatDistance(parseISO(data.created_at), new Date())\r\n          setMessage(t('Created %dateCreated% ago', { dateCreated }))\r\n\r\n          actions.setUserName(data.username)\r\n          setExistingUserState(ExistingUserState.CREATED)\r\n          setIsValid(true)\r\n        } else {\r\n          setExistingUserState(ExistingUserState.NEW)\r\n        }\r\n      } catch (error) {\r\n        toastError(t('Error'), t('Unable to verify username'))\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchUser()\r\n    }\r\n  }, [account, setExistingUserState, setIsValid, setMessage, actions, toastError, t])\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {t('Step %num%', { num: 4 })}\r\n      </Text>\r\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\r\n        {t('Set Your Name')}\r\n      </Heading>\r\n      <Text as=\"p\" mb=\"24px\">\r\n        {t('This name will be shown in team leaderboards and search results as long as your profile is active.')}\r\n      </Text>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\r\n            {t('Set Your Name')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {t(\r\n              'Your name must be at least 3 and at most 15 standard letters and numbers long. You can’t change this once you click Confirm.',\r\n            )}\r\n          </Text>\r\n          {existingUserState === ExistingUserState.IDLE ? (\r\n            <Skeleton height=\"40px\" width=\"240px\" />\r\n          ) : (\r\n            <InputWrap>\r\n              <Input\r\n                onChange={handleChange}\r\n                isWarning={userName && !isValid}\r\n                isSuccess={userName && isValid}\r\n                minLength={USERNAME_MIN_LENGTH}\r\n                maxLength={USERNAME_MAX_LENGTH}\r\n                disabled={isUserCreated}\r\n                placeholder={t('Enter your name...')}\r\n                value={userName}\r\n              />\r\n              <Indicator>\r\n                {isLoading && <AutoRenewIcon spin />}\r\n                {!isLoading && isValid && userName && <CheckmarkIcon color=\"success\" />}\r\n                {!isLoading && !isValid && userName && <WarningIcon color=\"failure\" />}\r\n              </Indicator>\r\n            </InputWrap>\r\n          )}\r\n          <Text color=\"textSubtle\" fontSize=\"14px\" py=\"4px\" mb=\"16px\" style={{ minHeight: '30px' }}>\r\n            {message}\r\n          </Text>\r\n          <Text as=\"p\" color=\"failure\" mb=\"8px\">\r\n            {t(\r\n              \"Only reuse a name from other social media if you're OK with people viewing your wallet. You can't change your name once you click Confirm.\",\r\n            )}\r\n          </Text>\r\n          <label htmlFor=\"checkbox\" style={{ display: 'block', cursor: 'pointer', marginBottom: '24px' }}>\r\n            <Flex alignItems=\"center\">\r\n              <div style={{ flex: 'none' }}>\r\n                <Checkbox id=\"checkbox\" scale=\"sm\" checked={isAcknowledged} onChange={handleAcknowledge} />\r\n              </div>\r\n              <Text ml=\"8px\">{t('I understand that people can view my wallet if they know my username')}</Text>\r\n            </Flex>\r\n          </label>\r\n          <Button onClick={handleConfirm} disabled={!isValid || isUserCreated || isLoading || !isAcknowledged}>\r\n            {t('Confirm')}\r\n          </Button>\r\n        </CardBody>\r\n      </Card>\r\n      <Button\r\n        onClick={onPresentConfirmProfileCreation}\r\n        disabled={!isValid || !isUserCreated}\r\n        id=\"completeProfileCreation\"\r\n      >\r\n        {t('Complete Profile')}\r\n      </Button>\r\n      {!hasMinimumCakeRequired && (\r\n        <Text color=\"failure\" mt=\"16px\">\r\n          {t('A minimum of %num% CAKE is required', { num: formatUnits(REGISTER_COST) })}\r\n        </Text>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserName\r\n", "import React from 'react'\r\nimport { Modal, Flex, Text } from '@pancakeswap/uikit'\r\nimport { ethers } from 'ethers'\r\nimport { formatUnits } from '@ethersproject/units'\r\nimport { useAppDispatch } from 'state'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCake, useProfile } from 'hooks/useContract'\r\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\r\nimport { fetchProfile } from 'state/profile'\r\nimport useToast from 'hooks/useToast'\r\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\r\nimport { ToastDescriptionWithTx } from 'components/Toast'\r\nimport ApproveConfirmButtons from 'components/ApproveConfirmButtons'\r\nimport { REGISTER_COST } from '../ProfileCreation/config'\r\nimport { State } from '../ProfileCreation/contexts/types'\r\n\r\ninterface Props {\r\n  userName: string\r\n  selectedNft: State['selectedNft']\r\n  account: string\r\n  teamId: number\r\n  minimumCakeRequired: ethers.BigNumber\r\n  allowance: ethers.BigNumber\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst ConfirmProfileCreationModal: React.FC<Props> = ({\r\n  account,\r\n  teamId,\r\n  selectedNft,\r\n  minimumCakeRequired,\r\n  allowance,\r\n  onDismiss,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const profileContract = useProfile()\r\n  const dispatch = useAppDispatch()\r\n  const { toastSuccess } = useToast()\r\n  const cakeContract = useCake()\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n\r\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\r\n    useApproveConfirmTransaction({\r\n      onRequiresApproval: async () => {\r\n        try {\r\n          const response = await cakeContract.allowance(account, profileContract.address)\r\n          return response.gte(minimumCakeRequired)\r\n        } catch (error) {\r\n          return false\r\n        }\r\n      },\r\n      onApprove: () => {\r\n        return callWithGasPrice(cakeContract, 'approve', [profileContract.address, allowance.toJSON()])\r\n      },\r\n      onConfirm: () => {\r\n        return callWithGasPrice(profileContract, 'createProfile', [teamId, selectedNft.nftAddress, selectedNft.tokenId])\r\n      },\r\n      onSuccess: async ({ receipt }) => {\r\n        await dispatch(fetchProfile(account))\r\n        onDismiss()\r\n        toastSuccess(t('Profile created!'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\r\n      },\r\n    })\r\n\r\n  return (\r\n    <Modal title={t('Complete Profile')} onDismiss={onDismiss}>\r\n      <Text color=\"textSubtle\" mb=\"8px\">\r\n        {t('Submitting NFT to contract and confirming User Name and Team.')}\r\n      </Text>\r\n      <Flex justifyContent=\"space-between\" mb=\"16px\">\r\n        <Text>{t('Cost')}</Text>\r\n        <Text>{t('%num% CAKE', { num: formatUnits(REGISTER_COST) })}</Text>\r\n      </Flex>\r\n      <ApproveConfirmButtons\r\n        isApproveDisabled={isConfirmed || isConfirming || isApproved}\r\n        isApproving={isApproving}\r\n        isConfirmDisabled={!isApproved || isConfirmed}\r\n        isConfirming={isConfirming}\r\n        onApprove={handleApprove}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ConfirmProfileCreationModal\r\n", "import { useReducer } from 'react'\r\n\r\nexport enum Views {\r\n  START = 'start',\r\n  CHANGE = 'change',\r\n  REMOVE = 'remove',\r\n  APPROVE = 'approve',\r\n}\r\n\r\nexport type Actions =\r\n  | {\r\n      type: 'set_view'\r\n      view: Views\r\n    }\r\n  | {\r\n      type: 'go_previous'\r\n    }\r\n\r\nexport interface State {\r\n  currentView: Views\r\n  previousView: Views | null\r\n}\r\n\r\nconst reducer = (state: State, action: Actions): State => {\r\n  switch (action.type) {\r\n    case 'set_view':\r\n      return {\r\n        ...state,\r\n        currentView: action.view,\r\n        previousView: state.currentView,\r\n      }\r\n    case 'go_previous':\r\n      return {\r\n        ...state,\r\n        currentView: state.previousView,\r\n        previousView: state.currentView,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport interface UseEditProfileResponse extends State {\r\n  goToStart: () => void\r\n  goToChange: () => void\r\n  goToApprove: () => void\r\n  goToRemove: () => void\r\n  goPrevious: () => void\r\n}\r\n\r\nconst useEditProfile = (): UseEditProfileResponse => {\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    currentView: Views.START,\r\n    previousView: null,\r\n  })\r\n\r\n  const goToStart = () => dispatch({ type: 'set_view', view: Views.START })\r\n  const goToChange = () => dispatch({ type: 'set_view', view: Views.CHANGE })\r\n  const goToRemove = () => dispatch({ type: 'set_view', view: Views.REMOVE })\r\n  const goToApprove = () => dispatch({ type: 'set_view', view: Views.APPROVE })\r\n  const goPrevious = () => dispatch({ type: 'go_previous' })\r\n\r\n  return { ...state, goToStart, goToChange, goToRemove, goToApprove, goPrevious }\r\n}\r\n\r\nexport default useEditProfile\r\n", "import React, { useContext } from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport NoWalletConnected from '../components/WalletNotConnected'\r\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\r\nimport Mint from './Mint'\r\nimport ProfilePicture from './ProfilePicture'\r\nimport TeamSelection from './TeamSelection'\r\nimport UserName from './UserName'\r\n\r\nconst Steps = () => {\r\n  const { t } = useTranslation()\r\n  const { isInitialized, currentStep } = useContext(ProfileCreationContext)\r\n  const { account } = useWeb3React()\r\n\r\n  if (!account) {\r\n    return <NoWalletConnected />\r\n  }\r\n\r\n  if (!isInitialized) {\r\n    return <div>{t('Loading...')}</div>\r\n  }\r\n\r\n  if (currentStep === 0) {\r\n    return <Mint />\r\n  }\r\n\r\n  if (currentStep === 1) {\r\n    return <ProfilePicture />\r\n  }\r\n\r\n  if (currentStep === 2) {\r\n    return <TeamSelection />\r\n  }\r\n\r\n  if (currentStep === 3) {\r\n    return <UserName />\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexport default Steps\r\n", "import React from 'react'\r\nimport Page from 'components/Layout/Page'\r\nimport Header from './Header'\r\nimport ProfileCreationProvider from './contexts/ProfileCreationProvider'\r\nimport Steps from './Steps'\r\n\r\nconst ProfileCreation = () => (\r\n  <ProfileCreationProvider>\r\n    <Page>\r\n      <Header />\r\n      <Steps />\r\n    </Page>\r\n  </ProfileCreationProvider>\r\n)\r\n\r\nexport default ProfileCreation\r\n", "import React, { useCallback, useEffect, useState } from 'react'\r\nimport { Modal, Text, InjectedModalProps, Button, AutoRenewIcon } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useToast from 'hooks/useToast'\r\nimport { useClaimRefundContract } from 'hooks/useContract'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getClaimRefundContract } from 'utils/contractHelpers'\r\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\r\nimport { ToastDescriptionWithTx } from 'components/Toast'\r\n\r\ninterface ClaimGiftProps extends InjectedModalProps {\r\n  onSuccess: () => void\r\n}\r\n\r\nexport const useCanClaim = () => {\r\n  const [canClaim, setCanClaim] = useState(false)\r\n  const [refresh, setRefresh] = useState(1)\r\n  const { account } = useWeb3React()\r\n\r\n  const checkClaimStatus = useCallback(() => {\r\n    setRefresh((prevRefresh) => prevRefresh + 1)\r\n  }, [setRefresh])\r\n\r\n  useEffect(() => {\r\n    const fetchClaimStatus = async () => {\r\n      const claimRefundContract = getClaimRefundContract()\r\n      try {\r\n        const walletCanClaim = await claimRefundContract.canClaim(account)\r\n        setCanClaim(walletCanClaim)\r\n      } catch (e) {\r\n        console.error(e)\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchClaimStatus()\r\n    }\r\n  }, [account, refresh, setCanClaim])\r\n\r\n  return { canClaim, checkClaimStatus }\r\n}\r\n\r\nconst ClaimGift: React.FC<ClaimGiftProps> = ({ onSuccess, onDismiss }) => {\r\n  const [isConfirming, setIsConfirming] = useState(false)\r\n  const { t } = useTranslation()\r\n  const { canClaim } = useCanClaim()\r\n  const claimRefundContract = useClaimRefundContract()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n\r\n  const handleClick = async () => {\r\n    const tx = await callWithGasPrice(claimRefundContract, 'getCakeBack')\r\n    setIsConfirming(true)\r\n    const receipt = await tx.wait()\r\n    if (receipt.status) {\r\n      toastSuccess(t('Success!'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\r\n      onSuccess()\r\n      onDismiss()\r\n    } else {\r\n      setIsConfirming(false)\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal title={t('Claim your Gift!')} onDismiss={onDismiss}>\r\n      <div style={{ maxWidth: '640px' }}>\r\n        <Text as=\"p\">{t('Thank you for being a day-one user of Pancake Profiles!')}</Text>\r\n        <Text as=\"p\" mb=\"8px\">\r\n          {t(\r\n            \"If you haven't already noticed, we made a mistake and the starter bunny you chose got mixed up and changed into another bunny. Oops!\",\r\n          )}\r\n        </Text>\r\n        <Text as=\"p\">{t('To make it up to you, we’ll refund you the full 4 CAKE it cost to make your bunny.')}</Text>\r\n        <Text as=\"p\" mb=\"8px\">\r\n          {t('We’re also preparing an all-new collectible for you to claim (for free!) in the near future.')}\r\n        </Text>\r\n        <Text as=\"p\" mb=\"24px\">\r\n          {t(\r\n            'Once you claim the refund, you can make another account with another wallet, mint a new bunny, and send it to your main account via the NFT page.',\r\n          )}\r\n        </Text>\r\n        <Button\r\n          endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n          isLoading={isConfirming}\r\n          onClick={handleClick}\r\n          disabled={!canClaim}\r\n        >\r\n          {t('Claim Your CAKE')}\r\n        </Button>\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ClaimGift\r\n", "import styled from 'styled-components'\r\n\r\nconst HeaderWrapper = styled.div`\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\r\n  margin-bottom: 24px;\r\n  padding-bottom: 24px;\r\n`\r\n\r\nexport default HeaderWrapper\r\n", "import { useEffect, useState } from 'react'\r\nimport { ethers } from 'ethers'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { multicallv2 } from 'utils/multicall'\r\nimport profileABI from 'config/abi/pancakeProfile.json'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\nimport useToast from 'hooks/useToast'\r\n\r\nconst useGetProfileCosts = () => {\r\n  const { t } = useTranslation()\r\n  const [costs, setCosts] = useState({\r\n    numberCakeToReactivate: ethers.BigNumber.from(0),\r\n    numberCakeToRegister: ethers.BigNumber.from(0),\r\n    numberCakeToUpdate: ethers.BigNumber.from(0),\r\n  })\r\n  const { toastError } = useToast()\r\n\r\n  useEffect(() => {\r\n    const fetchCosts = async () => {\r\n      try {\r\n        const calls = ['numberCakeToReactivate', 'numberCakeToRegister', 'numberCakeToUpdate'].map((method) => ({\r\n          address: getPancakeProfileAddress(),\r\n          name: method,\r\n        }))\r\n        const [[numberCakeToReactivate], [numberCakeToRegister], [numberCakeToUpdate]] = await multicallv2<\r\n          [[ethers.BigNumber], [ethers.BigNumber], [ethers.BigNumber]]\r\n        >(profileABI, calls)\r\n\r\n        setCosts({\r\n          numberCakeToReactivate,\r\n          numberCakeToRegister,\r\n          numberCakeToUpdate,\r\n        })\r\n      } catch (error) {\r\n        toastError(t('Error'), t('Could not retrieve CAKE costs for profile'))\r\n      }\r\n    }\r\n\r\n    fetchCosts()\r\n  }, [setCosts, toastError, t])\r\n\r\n  return costs\r\n}\r\n\r\nexport default useGetProfileCosts\r\n", "import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Button, Flex, Text, InjectedModalProps } from '@pancakeswap/uikit'\r\nimport { formatBigNumber } from 'utils/formatBalance'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\nimport { useCake } from 'hooks/useContract'\r\nimport { FetchStatus, useGetCakeBalance } from 'hooks/useTokenBalance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts'\r\nimport ProfileAvatarWithTeam from 'components/ProfileAvatarWithTeam'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { UseEditProfileResponse } from './reducer'\r\n\r\ninterface StartPageProps extends InjectedModalProps {\r\n  goToChange: UseEditProfileResponse['goToChange']\r\n  goToRemove: UseEditProfileResponse['goToRemove']\r\n  goToApprove: UseEditProfileResponse['goToApprove']\r\n}\r\n\r\nconst DangerOutline = styled(Button).attrs({ variant: 'secondary' })`\r\n  border-color: ${({ theme }) => theme.colors.failure};\r\n  color: ${({ theme }) => theme.colors.failure};\r\n  margin-bottom: 24px;\r\n\r\n  &:hover:not(:disabled):not(.button--disabled):not(:active) {\r\n    border-color: ${({ theme }) => theme.colors.failure};\r\n    opacity: 0.8;\r\n  }\r\n`\r\n\r\nconst AvatarWrapper = styled.div`\r\n  height: 64px;\r\n  width: 64px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 128px;\r\n    width: 128px;\r\n  }\r\n`\r\n\r\nconst StartPage: React.FC<StartPageProps> = ({ goToApprove, goToChange, goToRemove, onDismiss }) => {\r\n  const [needsApproval, setNeedsApproval] = useState(null)\r\n  const { profile } = useProfile()\r\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\r\n  const minimumCakeRequired = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\r\n  const { balance: cakeBalance, fetchStatus } = useGetCakeBalance()\r\n  const hasMinimumCakeRequired = fetchStatus === FetchStatus.SUCCESS && cakeBalance.gte(minimumCakeRequired)\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const cakeContract = useCake()\r\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\r\n\r\n  /**\r\n   * Check if the wallet has the required CAKE allowance to change their profile pic or reactivate\r\n   * If they don't, we send them to the approval screen first\r\n   */\r\n  useEffect(() => {\r\n    const checkApprovalStatus = async () => {\r\n      const response = await cakeContract.allowance(account, getPancakeProfileAddress())\r\n      setNeedsApproval(response.lt(cost))\r\n    }\r\n\r\n    if (account) {\r\n      checkApprovalStatus()\r\n    }\r\n  }, [account, cost, setNeedsApproval, cakeContract])\r\n\r\n  if (!profile) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\">\r\n      <AvatarWrapper>\r\n        <ProfileAvatarWithTeam profile={profile} />\r\n      </AvatarWrapper>\r\n      <Flex alignItems=\"center\" style={{ height: '48px' }} justifyContent=\"center\">\r\n        <Text as=\"p\" color=\"failure\">\r\n          {!hasMinimumCakeRequired &&\r\n            t('%minimum% CAKE required to change profile pic', { minimum: formatBigNumber(minimumCakeRequired) })}\r\n        </Text>\r\n      </Flex>\r\n      {profile.isActive ? (\r\n        <>\r\n          <Button\r\n            width=\"100%\"\r\n            mb=\"8px\"\r\n            onClick={needsApproval === true ? goToApprove : goToChange}\r\n            disabled={!hasMinimumCakeRequired || needsApproval === null}\r\n          >\r\n            {t('Change Profile Pic')}\r\n          </Button>\r\n          <DangerOutline width=\"100%\" onClick={goToRemove}>\r\n            {t('Remove Profile Pic')}\r\n          </DangerOutline>\r\n        </>\r\n      ) : (\r\n        <Button\r\n          width=\"100%\"\r\n          mb=\"8px\"\r\n          onClick={needsApproval === true ? goToApprove : goToChange}\r\n          disabled={!hasMinimumCakeRequired || needsApproval === null}\r\n        >\r\n          {t('Reactivate Profile')}\r\n        </Button>\r\n      )}\r\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\r\n        {t('Close Window')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default StartPage\r\n", "import React, { useState } from 'react'\r\nimport { AutoRenewIcon, Button, Checkbox, Flex, InjectedModalProps, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts'\r\nimport { useAppDispatch } from 'state'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { fetchProfile } from 'state/profile'\r\nimport useToast from 'hooks/useToast'\r\nimport { formatBigNumber } from 'utils/formatBalance'\r\nimport { useProfile as useProfileContract } from 'hooks/useContract'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\r\nimport { ToastDescriptionWithTx } from 'components/Toast'\r\n\r\ntype PauseProfilePageProps = InjectedModalProps\r\n\r\nconst PauseProfilePage: React.FC<PauseProfilePageProps> = ({ onDismiss }) => {\r\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\r\n  const [isConfirming, setIsConfirming] = useState(false)\r\n  const { profile } = useProfile()\r\n  const { numberCakeToReactivate } = useGetProfileCosts()\r\n  const { t } = useTranslation()\r\n  const pancakeProfileContract = useProfileContract()\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n  const { account } = useWeb3React()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const dispatch = useAppDispatch()\r\n\r\n  const handleChange = () => setIsAcknowledged(!isAcknowledged)\r\n\r\n  const handleDeactivateProfile = async () => {\r\n    const tx = await callWithGasPrice(pancakeProfileContract, 'pauseProfile')\r\n    setIsConfirming(true)\r\n    const receipt = await tx.wait()\r\n    if (receipt.status) {\r\n      // Re-fetch profile\r\n      await dispatch(fetchProfile(account))\r\n      toastSuccess(t('Profile Paused!'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\r\n      onDismiss()\r\n    } else {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      setIsConfirming(false)\r\n    }\r\n  }\r\n\r\n  if (!profile) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Text as=\"p\" color=\"failure\" mb=\"24px\">\r\n        {t('This will suspend your profile and send your Collectible back to your wallet')}\r\n      </Text>\r\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n        {t(\r\n          \"While your profile is suspended, you won't be able to earn points, but your achievements and points will stay associated with your profile\",\r\n        )}\r\n      </Text>\r\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n        {t('Cost to reactivate in the future: %cost% CAKE', { cost: formatBigNumber(numberCakeToReactivate) })}\r\n      </Text>\r\n      <label htmlFor=\"acknowledgement\" style={{ cursor: 'pointer', display: 'block', marginBottom: '24px' }}>\r\n        <Flex alignItems=\"center\">\r\n          <Checkbox id=\"acknowledgement\" checked={isAcknowledged} onChange={handleChange} scale=\"sm\" />\r\n          <Text ml=\"8px\">{t('I understand')}</Text>\r\n        </Flex>\r\n      </label>\r\n      <Button\r\n        width=\"100%\"\r\n        isLoading={isConfirming}\r\n        endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        disabled={!isAcknowledged || isConfirming}\r\n        onClick={handleDeactivateProfile}\r\n        mb=\"8px\"\r\n      >\r\n        {t('Confirm')}\r\n      </Button>\r\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\r\n        {t('Close Window')}\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PauseProfilePage\r\n", "import React, { useState } from 'react'\r\nimport { Button, InjectedModalProps, Skeleton, Text } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useAppDispatch } from 'state'\r\nimport { useGetCollectibles } from 'state/collectibles/hooks'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useToast from 'hooks/useToast'\r\nimport { fetchProfile } from 'state/profile'\r\nimport { getBunnyNftAddress } from 'utils/collectibles'\r\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\r\nimport { getErc721Contract } from 'utils/contractHelpers'\r\nimport { useProfile as useProfileContract } from 'hooks/useContract'\r\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\nimport { ToastDescriptionWithTx } from 'components/Toast'\r\nimport ApproveConfirmButtons from 'components/ApproveConfirmButtons'\r\nimport SelectionCard from '../SelectionCard'\r\n\r\ntype ChangeProfilePicPageProps = InjectedModalProps\r\n\r\nconst ChangeProfilePicPage: React.FC<ChangeProfilePicPageProps> = ({ onDismiss }) => {\r\n  const [selectedNft, setSelectedNft] = useState({\r\n    tokenId: null,\r\n    nftAddress: null,\r\n  })\r\n  const { t } = useTranslation()\r\n  const { isLoading, tokenIds, nftsInWallet } = useGetCollectibles()\r\n  const dispatch = useAppDispatch()\r\n  const { profile } = useProfile()\r\n  const profileContract = useProfileContract()\r\n  const { account, library } = useWeb3React()\r\n  const { toastSuccess } = useToast()\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n\r\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\r\n    useApproveConfirmTransaction({\r\n      onApprove: () => {\r\n        const contract = getErc721Contract(selectedNft.nftAddress, library.getSigner())\r\n        return callWithGasPrice(contract, 'approve', [getPancakeProfileAddress(), selectedNft.tokenId])\r\n      },\r\n      onConfirm: () => {\r\n        if (!profile.isActive) {\r\n          return callWithGasPrice(profileContract, 'reactivateProfile', [selectedNft.nftAddress, selectedNft.tokenId])\r\n        }\r\n\r\n        return callWithGasPrice(profileContract, 'updateProfile', [selectedNft.nftAddress, selectedNft.tokenId])\r\n      },\r\n      onSuccess: async ({ receipt }) => {\r\n        // Re-fetch profile\r\n        await dispatch(fetchProfile(account))\r\n        toastSuccess(t('Profile Updated!'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\r\n\r\n        onDismiss()\r\n      },\r\n    })\r\n\r\n  return (\r\n    <>\r\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n        {t('Choose a new Collectible to use as your profile pic.')}\r\n      </Text>\r\n      {isLoading ? (\r\n        <Skeleton height=\"80px\" mb=\"16px\" />\r\n      ) : (\r\n        nftsInWallet.map((walletNft) => {\r\n          const [firstTokenId] = tokenIds[walletNft.identifier]\r\n          const handleChange = (value: string) => {\r\n            setSelectedNft({\r\n              tokenId: Number(value),\r\n              nftAddress: getBunnyNftAddress(),\r\n            })\r\n          }\r\n\r\n          return (\r\n            <SelectionCard\r\n              name=\"profilePicture\"\r\n              key={walletNft.identifier}\r\n              value={firstTokenId}\r\n              image={`/images/nfts/${walletNft.images.md}`}\r\n              isChecked={firstTokenId === selectedNft.tokenId}\r\n              onChange={handleChange}\r\n              disabled={isApproving || isConfirming || isConfirmed}\r\n            >\r\n              <Text bold>{walletNft.name}</Text>\r\n            </SelectionCard>\r\n          )\r\n        })\r\n      )}\r\n      {!isLoading && nftsInWallet.length === 0 && (\r\n        <>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\r\n            {t('Sorry! You don’t have any eligible Collectibles in your wallet to use!')}\r\n          </Text>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {t('Make sure you have a Pancake Collectible in your wallet and try again!')}\r\n          </Text>\r\n        </>\r\n      )}\r\n      <ApproveConfirmButtons\r\n        isApproveDisabled={isConfirmed || isConfirming || isApproved || selectedNft.tokenId === null}\r\n        isApproving={isApproving}\r\n        isConfirmDisabled={!isApproved || isConfirmed || selectedNft.tokenId === null}\r\n        isConfirming={isConfirming}\r\n        onApprove={handleApprove}\r\n        onConfirm={handleConfirm}\r\n      />\r\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving || isConfirming}>\r\n        {t('Close Window')}\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ChangeProfilePicPage\r\n", "import React, { useState } from 'react'\r\nimport { AutoRenewIcon, Button, Flex, InjectedModalProps, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCake } from 'hooks/useContract'\r\nimport useToast from 'hooks/useToast'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\nimport { formatBigNumber } from 'utils/formatBalance'\r\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts'\r\nimport { UseEditProfileResponse } from './reducer'\r\n\r\ninterface ApproveCakePageProps extends InjectedModalProps {\r\n  goToChange: UseEditProfileResponse['goToChange']\r\n}\r\n\r\nconst ApproveCakePage: React.FC<ApproveCakePageProps> = ({ goToChange, onDismiss }) => {\r\n  const [isApproving, setIsApproving] = useState(false)\r\n  const { profile } = useProfile()\r\n  const { t } = useTranslation()\r\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\r\n  const cakeContract = useCake()\r\n  const { toastError } = useToast()\r\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\r\n\r\n  const handleApprove = async () => {\r\n    const tx = await cakeContract.approve(getPancakeProfileAddress(), cost.mul(2).toString())\r\n    setIsApproving(true)\r\n    const receipt = await tx.wait()\r\n    if (receipt.status) {\r\n      goToChange()\r\n    } else {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      setIsApproving(false)\r\n    }\r\n  }\r\n\r\n  if (!profile) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\r\n        <Text>{profile.isActive ? t('Cost to update:') : t('Cost to reactivate:')}</Text>\r\n        <Text>{formatBigNumber(cost)} CAKE</Text>\r\n      </Flex>\r\n      <Button\r\n        disabled={isApproving}\r\n        isLoading={isApproving}\r\n        endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        width=\"100%\"\r\n        mb=\"8px\"\r\n        onClick={handleApprove}\r\n      >\r\n        {t('Enable')}\r\n      </Button>\r\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving}>\r\n        {t('Close Window')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default ApproveCakePage\r\n", "import React from 'react'\r\nimport { InjectedModalProps, Modal } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useEditProfile, { Views } from './reducer'\r\nimport StartView from './StartView'\r\nimport PauseProfileView from './PauseProfileView'\r\nimport ChangeProfilePicView from './ChangeProfilePicView'\r\nimport ApproveCakeView from './ApproveCakeView'\r\n\r\ntype EditProfileModalProps = InjectedModalProps\r\n\r\nconst viewTitle = {\r\n  [Views.START]: 'Edit Profile',\r\n  [Views.CHANGE]: 'Change Profile Pic',\r\n  [Views.REMOVE]: 'Remove Profile Pic',\r\n  [Views.APPROVE]: 'Enable CAKE',\r\n}\r\n\r\nconst EditProfileModal: React.FC<EditProfileModalProps> = ({ onDismiss }) => {\r\n  const { currentView, goToChange, goToRemove, goToApprove, goPrevious } = useEditProfile()\r\n  const { t } = useTranslation()\r\n  const translationKey = viewTitle[currentView]\r\n\r\n  const isStartView = currentView === Views.START\r\n  const handleBack = isStartView ? null : () => goPrevious()\r\n\r\n  return (\r\n    <Modal title={t(translationKey)} onBack={handleBack} onDismiss={onDismiss} hideCloseButton={!isStartView}>\r\n      <div style={{ maxWidth: '400px' }}>\r\n        {currentView === Views.START && (\r\n          <StartView goToApprove={goToApprove} goToChange={goToChange} goToRemove={goToRemove} onDismiss={onDismiss} />\r\n        )}\r\n        {currentView === Views.REMOVE && <PauseProfileView onDismiss={onDismiss} />}\r\n        {currentView === Views.CHANGE && <ChangeProfilePicView onDismiss={onDismiss} />}\r\n        {currentView === Views.APPROVE && <ApproveCakeView goToChange={goToChange} onDismiss={onDismiss} />}\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default EditProfileModal\r\n", "import React from 'react'\r\nimport { Button, Flex, Heading, useModal, PresentWonIcon } from '@pancakeswap/uikit'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ClaimNftAndCakeModal, { useCanClaim } from './ClaimGiftModal'\r\nimport HeaderWrapper from './HeaderWrapper'\r\nimport EditProfileModal from './EditProfileModal'\r\n\r\nconst ProfileHeader = () => {\r\n  const { t } = useTranslation()\r\n  const { canClaim, checkClaimStatus } = useCanClaim()\r\n  const [onPresentClaimGiftModal] = useModal(<ClaimNftAndCakeModal onSuccess={checkClaimStatus} />)\r\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\r\n  const { hasProfile } = useProfile()\r\n\r\n  return (\r\n    <HeaderWrapper>\r\n      <Flex\r\n        flexDirection={['column', null, 'row']}\r\n        alignItems={['start', null, 'center']}\r\n        justifyContent=\"space-between\"\r\n      >\r\n        <div>\r\n          <Heading as=\"h1\" scale=\"xxl\" mb=\"8px\" color=\"secondary\">\r\n            {t('Your Profile')}\r\n          </Heading>\r\n          <Heading as=\"h2\" scale=\"lg\" mb=\"16px\">\r\n            {t('Check your stats and collect achievements')}\r\n          </Heading>\r\n          {hasProfile && <Button onClick={onEditProfileModal}>{t('Edit Profile')}</Button>}\r\n        </div>\r\n        {canClaim && (\r\n          <Button variant=\"tertiary\" onClick={onPresentClaimGiftModal} startIcon={<PresentWonIcon />}>\r\n            {t('You’ve got a gift to claim!')}\r\n          </Button>\r\n        )}\r\n      </Flex>\r\n    </HeaderWrapper>\r\n  )\r\n}\r\n\r\nexport default ProfileHeader\r\n", "import React, { ImgHTMLAttributes } from 'react'\r\nimport styled from 'styled-components'\r\nimport { BunnyPlaceholderIcon } from '@pancakeswap/uikit'\r\n\r\ninterface AchievementAvatarProps extends ImgHTMLAttributes<HTMLImageElement> {\r\n  badge?: string\r\n}\r\n\r\nconst NoBadgePlaceholder = styled(BunnyPlaceholderIcon)`\r\n  height: 48px;\r\n  width: 48px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 64px;\r\n    width: 64px;\r\n  }\r\n`\r\n\r\nconst StyledAchievementAvatar = styled.img`\r\n  height: 48px;\r\n  width: 48px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 64px;\r\n    width: 64px;\r\n  }\r\n`\r\n\r\nconst AchievementAvatar: React.FC<AchievementAvatarProps> = ({ badge, ...props }) => {\r\n  if (!badge) {\r\n    return <NoBadgePlaceholder />\r\n  }\r\n\r\n  return <StyledAchievementAvatar src={`/images/achievements/${badge}`} alt=\"achievement badge\" {...props} />\r\n}\r\n\r\nexport default AchievementAvatar\r\n", "import React from 'react'\r\nimport { Text, TextProps } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { TranslatableText as AchievementTitleType } from 'config/constants/types'\r\n\r\ninterface AchievementTitleProps extends TextProps {\r\n  title: AchievementTitleType\r\n}\r\n\r\nconst AchievementTitle: React.FC<AchievementTitleProps> = ({ title, ...props }) => {\r\n  const { t } = useTranslation()\r\n\r\n  if (typeof title === 'string') {\r\n    return (\r\n      <Text bold {...props}>\r\n        {title}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  const { key, data = {} } = title\r\n\r\n  return (\r\n    <Text bold {...props}>\r\n      {t(key, data)}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default AchievementTitle\r\n", "import React from 'react'\r\nimport { Text, TextProps } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { TranslatableText as AchievementDescriptionType } from 'config/constants/types'\r\nimport styled from 'styled-components'\r\n\r\ninterface AchievementDescriptionProps extends TextProps {\r\n  description?: AchievementDescriptionType\r\n}\r\n\r\nconst Description = styled(Text).attrs({ as: 'p', fontSize: '14px' })`\r\n  display: none;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst AchievementDescription: React.FC<AchievementDescriptionProps> = ({ description, ...props }) => {\r\n  const { t } = useTranslation()\r\n\r\n  if (!description) {\r\n    return null\r\n  }\r\n\r\n  if (typeof description === 'string') {\r\n    return (\r\n      <Text as=\"p\" color=\"textSubtle\" fontSize=\"14px\" {...props}>\r\n        {description}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  const { key, data = {} } = description\r\n\r\n  return (\r\n    <Description color=\"textSubtle\" {...props}>\r\n      {t(key, data)}\r\n    </Description>\r\n  )\r\n}\r\n\r\nexport default AchievementDescription\r\n", "import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, PrizeIcon, Text } from '@pancakeswap/uikit'\r\nimport { Achievement } from 'state/types'\r\nimport AchievementAvatar from './AchievementAvatar'\r\nimport AchievementTitle from './AchievementTitle'\r\nimport AchievementDescription from './AchievementDescription'\r\n\r\ninterface AchievementCardProps {\r\n  achievement: Achievement\r\n}\r\n\r\nconst Details = styled(Flex)`\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding-left: 8px;\r\n  padding-right: 8px;\r\n`\r\n\r\nconst AchievementCard: React.FC<AchievementCardProps> = ({ achievement }) => {\r\n  return (\r\n    <Flex>\r\n      <AchievementAvatar badge={achievement.badge} />\r\n      <Details>\r\n        <AchievementTitle title={achievement.title} />\r\n        <AchievementDescription description={achievement.description} />\r\n      </Details>\r\n      <Flex alignItems=\"center\">\r\n        <PrizeIcon width=\"18px\" color=\"textSubtle\" mr=\"4px\" />\r\n        <Text color=\"textSubtle\">{achievement.points.toLocaleString()}</Text>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default AchievementCard\r\n", "import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Heading } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useAchievements } from 'state/achievements/hooks'\r\nimport AchievementCard from './AchievementCard'\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-gap: 16px;\r\n  grid-template-columns: 1fr;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n`\r\n\r\nconst AchievementsList = () => {\r\n  const { t } = useTranslation()\r\n  const achievements = useAchievements()\r\n\r\n  return (\r\n    <>\r\n      <Grid>\r\n        {achievements.map((achievement) => (\r\n          <AchievementCard key={achievement.id} achievement={achievement} />\r\n        ))}\r\n      </Grid>\r\n      {achievements.length === 0 && (\r\n        <Flex alignItems=\"center\" justifyContent=\"center\" style={{ height: '64px' }}>\r\n          <Heading as=\"h5\" scale=\"md\" color=\"textDisabled\">\r\n            {t('No achievements yet!')}\r\n          </Heading>\r\n        </Flex>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AchievementsList\r\n", "import { useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useSelector } from 'react-redux'\r\nimport { useAppDispatch } from 'state'\r\nimport { State, AchievementState } from '../types'\r\nimport { fetchAchievements } from '.'\r\n\r\nexport const useFetchAchievements = () => {\r\n  const { account } = useWeb3React()\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchAchievements(account))\r\n    }\r\n  }, [account, dispatch])\r\n}\r\n\r\nexport const useAchievements = () => {\r\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\r\n  return achievements\r\n}\r\n", "import styled from 'styled-components'\r\n\r\nconst ActionColumn = styled.div`\r\n  flex: none;\r\n  width: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    max-width: 160px;\r\n\r\n    & > button {\r\n      width: 100%;\r\n    }\r\n  }\r\n`\r\n\r\nexport default ActionColumn\r\n", "import React from 'react'\r\nimport { Flex, FlexProps, PrizeIcon, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface PointsLabelProps extends FlexProps {\r\n  points: number\r\n}\r\n\r\nconst PointsLabel: React.FC<PointsLabelProps> = ({ points, ...props }) => {\r\n  const { t } = useTranslation()\r\n  const localePoints = points.toLocaleString()\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" {...props}>\r\n      <PrizeIcon mr=\"4px\" color=\"textSubtle\" />\r\n      <Text color=\"textSubtle\">{t('%num% points', { num: localePoints })}</Text>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default PointsLabel\r\n", "import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { AutoRenewIcon, Button, Flex } from '@pancakeswap/uikit'\r\nimport { Achievement } from 'state/types'\r\nimport useToast from 'hooks/useToast'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { usePointCenterIfoContract } from 'hooks/useContract'\r\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\r\nimport { ToastDescriptionWithTx } from 'components/Toast'\r\nimport ActionColumn from '../ActionColumn'\r\nimport PointsLabel from './PointsLabel'\r\nimport AchievementTitle from '../AchievementTitle'\r\nimport AchievementAvatar from '../AchievementAvatar'\r\nimport AchievementDescription from '../AchievementDescription'\r\n\r\ninterface AchievementRowProps {\r\n  achievement: Achievement\r\n  onCollectSuccess?: (achievement: Achievement) => void\r\n}\r\n\r\nconst StyledAchievementRow = styled(Flex)`\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  padding-bottom: 16px;\r\n  padding-top: 16px;\r\n`\r\n\r\nconst Details = styled.div`\r\n  flex: 1;\r\n`\r\n\r\nconst Body = styled(Flex)`\r\n  flex-direction: column;\r\n  flex: 1;\r\n  margin-left: 8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    align-items: center;\r\n    flex-direction: row;\r\n  }\r\n`\r\n\r\nconst AchievementRow: React.FC<AchievementRowProps> = ({ achievement, onCollectSuccess }) => {\r\n  const [isCollecting, setIsCollecting] = useState(false)\r\n  const { t } = useTranslation()\r\n  const pointCenterContract = usePointCenterIfoContract()\r\n  const { toastError, toastSuccess } = useToast()\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n\r\n  const handleCollectPoints = async () => {\r\n    const tx = await callWithGasPrice(pointCenterContract, 'getPoints', [achievement.address])\r\n    setIsCollecting(true)\r\n    const receipt = await tx.wait()\r\n    if (receipt.status) {\r\n      setIsCollecting(false)\r\n      onCollectSuccess(achievement)\r\n      toastSuccess(t('Points Collected!'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\r\n    } else {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      setIsCollecting(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <StyledAchievementRow>\r\n      <AchievementAvatar badge={achievement.badge} />\r\n      <Body>\r\n        <Details>\r\n          <AchievementTitle title={achievement.title} />\r\n          <AchievementDescription description={achievement.description} />\r\n        </Details>\r\n        <PointsLabel points={achievement.points} px={[0, null, null, '32px']} mb={['16px', null, null, 0]} />\r\n        <ActionColumn>\r\n          <Button\r\n            onClick={handleCollectPoints}\r\n            isLoading={isCollecting}\r\n            endIcon={isCollecting ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n            disabled={isCollecting}\r\n            variant=\"secondary\"\r\n          >\r\n            {t('Collect')}\r\n          </Button>\r\n        </ActionColumn>\r\n      </Body>\r\n    </StyledAchievementRow>\r\n  )\r\n}\r\n\r\nexport default AchievementRow\r\n", "import React, { useEffect, useState } from 'react'\r\nimport { sumBy } from 'lodash'\r\nimport { useAppDispatch } from 'state'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Card, CardBody, CardHeader, Flex, Heading, PrizeIcon } from '@pancakeswap/uikit'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { Achievement } from 'state/types'\r\nimport { addPoints } from 'state/profile'\r\nimport { addAchievement } from 'state/achievements'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getClaimableIfoData } from 'utils/achievements'\r\nimport AchievementRow from './AchievementRow'\r\n\r\nconst ClaimPointsCallout = () => {\r\n  const [claimableAchievements, setClaimableAchievement] = useState<Achievement[]>([])\r\n  const { t } = useTranslation()\r\n  const dispatch = useAppDispatch()\r\n  const { profile } = useProfile()\r\n  const { account } = useWeb3React()\r\n\r\n  useEffect(() => {\r\n    const fetchIfoClaims = async () => {\r\n      const ifoData = await getClaimableIfoData(account)\r\n      setClaimableAchievement(ifoData)\r\n    }\r\n\r\n    if (account) {\r\n      fetchIfoClaims()\r\n    }\r\n  }, [account, dispatch, setClaimableAchievement])\r\n\r\n  const handleCollectSuccess = (achievement: Achievement) => {\r\n    dispatch(addAchievement(achievement))\r\n    dispatch(addPoints(achievement.points))\r\n\r\n    setClaimableAchievement((prevClaimableAchievements) =>\r\n      prevClaimableAchievements.filter((prevClaimableAchievement) => prevClaimableAchievement.id !== achievement.id),\r\n    )\r\n  }\r\n\r\n  if (!profile?.isActive) {\r\n    return null\r\n  }\r\n\r\n  if (claimableAchievements.length === 0) {\r\n    return null\r\n  }\r\n\r\n  const totalPointsToCollect = sumBy(claimableAchievements, 'points')\r\n\r\n  return (\r\n    <Card isActive mb=\"32px\">\r\n      <CardHeader>\r\n        <Flex flexDirection={['column', null, 'row']} justifyContent={['start', null, 'space-between']}>\r\n          <Flex alignItems=\"center\" mb={['16px', null, 0]}>\r\n            <PrizeIcon width=\"32px\" mr=\"8px\" />\r\n            <Heading scale=\"lg\">{t('%num% Points to Collect', { num: totalPointsToCollect })}</Heading>\r\n          </Flex>\r\n        </Flex>\r\n      </CardHeader>\r\n      <CardBody>\r\n        {claimableAchievements.map((achievement) => (\r\n          <AchievementRow key={achievement.address} achievement={achievement} onCollectSuccess={handleCollectSuccess} />\r\n        ))}\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ClaimPointsCallout\r\n", "import React from 'react'\r\nimport { BunnyPlaceholderIcon, Flex, Heading } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface ComingSoonProps {\r\n  children?: React.ReactNode\r\n}\r\n\r\nconst ComingSoon: React.FC<ComingSoonProps> = ({ children }) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" p=\"24px\">\r\n      <BunnyPlaceholderIcon width=\"72px\" height=\"72px\" />\r\n      <Heading as=\"h5\" scale=\"md\" color=\"textDisabled\">\r\n        {children || t('Coming Soon!')}\r\n      </Heading>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default ComingSoon\r\n", "import { useTranslation } from 'contexts/Localization'\r\nimport React from 'react'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport { ChevronLeftIcon, Flex, Text, ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\r\n\r\ninterface MenuProps {\r\n  activeIndex?: number\r\n}\r\n\r\nconst Menu: React.FC<MenuProps> = ({ activeIndex = 0 }) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <>\r\n      <Flex mb=\"24px\">\r\n        <RouterLink to=\"/teams\">\r\n          <Flex alignItems=\"center\">\r\n            <ChevronLeftIcon color=\"primary\" />\r\n            <Text color=\"primary\">{t('Teams Overview')}</Text>\r\n          </Flex>\r\n        </RouterLink>\r\n      </Flex>\r\n\r\n      <Flex mb=\"24px\" justifyContent=\"center\">\r\n        <ButtonMenu activeIndex={activeIndex} variant=\"subtle\" scale=\"sm\">\r\n          <ButtonMenuItem as={RouterLink} to=\"/profile/tasks\">\r\n            {t('Task Center')}\r\n          </ButtonMenuItem>\r\n          <ButtonMenuItem as={RouterLink} to=\"/profile\">\r\n            {t('Public Profile')}\r\n          </ButtonMenuItem>\r\n        </ButtonMenu>\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Menu\r\n", "import React from 'react'\r\nimport { Card, CardBody, CardHeader, Flex, Heading, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport AchievementsList from './components/AchievementsList'\r\nimport ClaimPointsCallout from './components/ClaimPointsCallout '\r\nimport ComingSoon from './components/ComingSoon'\r\nimport Menu from './components/Menu'\r\n\r\nconst TaskCenter = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <>\r\n      <Menu />\r\n      <ClaimPointsCallout />\r\n      <Card mb=\"32px\">\r\n        <CardHeader>\r\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n            <div>\r\n              <Heading scale=\"lg\" mb=\"8px\">\r\n                {t('Achievements')}\r\n              </Heading>\r\n              <Text as=\"p\">{t('Earn more points for completing larger quests!')}</Text>\r\n            </div>\r\n          </Flex>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <AchievementsList />\r\n        </CardBody>\r\n      </Card>\r\n      <Card mb=\"32px\">\r\n        <CardHeader>\r\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n            <div>\r\n              <Heading scale=\"lg\" mb=\"8px\">\r\n                {t('Task Center')}\r\n              </Heading>\r\n              <Text as=\"p\">{t('Earn points by completing regular tasks!')}</Text>\r\n              <Text as=\"p\">{t('Collecting points for these tasks makes them available again.')}</Text>\r\n            </div>\r\n          </Flex>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <ComingSoon />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TaskCenter\r\n", "import styled, { DefaultTheme } from 'styled-components'\r\nimport { CardHeader as UIKitCardHeader } from '@pancakeswap/uikit'\r\n\r\nconst getBackground = (theme: DefaultTheme) => {\r\n  if (theme.isDark) {\r\n    return 'linear-gradient(139.73deg, #142339 0%, #24243D 47.4%, #37273F 100%)'\r\n  }\r\n\r\n  return 'linear-gradient(139.73deg, #ed9797 0%, #EFF4F5 46.87%, #F3EFFF 100%)'\r\n}\r\n\r\nconst CardHeader = styled(UIKitCardHeader)`\r\n  background: ${({ theme }) => getBackground(theme)};\r\n  position: relative;\r\n`\r\n\r\nexport default CardHeader\r\n", "import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport { Nft } from 'config/constants/nfts/types'\r\n\r\ninterface CollectibleCardProps {\r\n  nft: Nft\r\n}\r\n\r\nconst PreviewImage = styled.img`\r\n  border-radius: 4px;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nconst CollectibleCard: React.FC<CollectibleCardProps> = ({ nft }) => {\r\n  return (\r\n    <div>\r\n      <PreviewImage src={`/images/nfts/${nft.images.lg}`} />\r\n      <Text bold mb=\"8px\">\r\n        {nft.name}\r\n      </Text>\r\n      <Text as=\"p\" fontSize=\"12px\" color=\"textSubtle\">\r\n        {nft.description}\r\n      </Text>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CollectibleCard\r\n", "import React from 'react'\r\nimport { Heading, Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\r\nimport { Link } from 'react-router-dom'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useGetCollectibles } from 'state/collectibles/hooks'\r\nimport styled from 'styled-components'\r\nimport CollectibleCard from './CollectibleCard'\r\n\r\nconst CollectibleList = styled.div`\r\n  display: grid;\r\n  grid-gap: 16px;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  padding: 16px 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    grid-gap: 24px;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    padding: 24px 0;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-template-columns: repeat(4, 1fr);\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    grid-template-columns: repeat(5, 1fr);\r\n  }\r\n`\r\n\r\nconst Collectibles = () => {\r\n  const { t } = useTranslation()\r\n  const { nftsInWallet } = useGetCollectibles()\r\n\r\n  return (\r\n    <>\r\n      <Heading as=\"h4\" scale=\"md\" mb=\"8px\">\r\n        {t('Pancake Collectibles')}\r\n      </Heading>\r\n      <Text as=\"p\">\r\n        {t('Pancake Collectibles are special ERC-721 NFTs that can be used on the PancakeSwap platform.')}\r\n      </Text>\r\n      <Text as=\"p\">\r\n        {t('NFTs in this user’s wallet that aren’t approved Pancake Collectibles won’t be shown here.')}\r\n      </Text>\r\n      {nftsInWallet.length > 0 && (\r\n        <CollectibleList>\r\n          {nftsInWallet.map((nftInWallet) => (\r\n            <CollectibleCard key={nftInWallet.identifier} nft={nftInWallet} />\r\n          ))}\r\n        </CollectibleList>\r\n      )}\r\n      {nftsInWallet.length === 0 && (\r\n        <Flex justifyContent=\"center\" p=\"32px\">\r\n          <Text fontSize=\"20px\" bold color=\"textDisabled\">\r\n            {t('No NFTs Found')}\r\n          </Text>\r\n        </Flex>\r\n      )}\r\n      <Flex alignItems=\"center\" justifyContent=\"flex-end\">\r\n        <Link to=\"/collectibles\">{t('See all approved Pancake Collectibles')}</Link>\r\n        <ChevronRightIcon />\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Collectibles\r\n", "import styled from 'styled-components'\r\nimport { Text } from '@pancakeswap/uikit'\r\n\r\nconst SecondaryCard = styled(Text)`\r\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\r\n  border-radius: 16px;\r\n`\r\n\r\nSecondaryCard.defaultProps = {\r\n  p: '24px',\r\n}\r\n\r\nexport default SecondaryCard\r\n", "import React, { ElementType, ReactNode } from 'react'\r\nimport { Flex, Heading, Text, TextProps } from '@pancakeswap/uikit'\r\nimport SecondaryCard from './SecondaryCard'\r\n\r\ninterface StatBoxProps extends TextProps {\r\n  icon: ElementType\r\n  title: ReactNode\r\n  subtitle: ReactNode\r\n  isDisabled?: boolean\r\n}\r\n\r\nconst StatBox: React.FC<StatBoxProps> = ({ icon: Icon, title, subtitle, isDisabled = false, ...props }) => {\r\n  return (\r\n    <SecondaryCard {...props}>\r\n      <Flex alignItems=\"start\">\r\n        <Icon width=\"44px\" mr=\"24px\" color={isDisabled ? 'textDisabled' : 'currentColor'} />\r\n        <div>\r\n          <Heading as=\"h3\" scale=\"xl\" color={isDisabled ? 'textDisabled' : 'text'}>\r\n            {title}\r\n          </Heading>\r\n          <Text textTransform=\"uppercase\" color={isDisabled ? 'textDisabled' : 'textSubtle'} fontSize=\"12px\" bold>\r\n            {subtitle}\r\n          </Text>\r\n        </div>\r\n      </Flex>\r\n    </SecondaryCard>\r\n  )\r\n}\r\n\r\nexport default StatBox\r\n", "import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useModal } from '@pancakeswap/uikit'\r\nimport ProfileAvatarWithTeam, { ProfileAvatarProps } from 'components/ProfileAvatarWithTeam'\r\nimport EditProfileModal from './EditProfileModal'\r\n\r\nconst EditOverlay = styled.div`\r\n  background: rgba(0, 0, 0, 0.6) url('/images/camera.svg') no-repeat center center;\r\n  background-size: 24px;\r\n  border-radius: 50%;\r\n  left: 0;\r\n  height: 100%;\r\n  opacity: 0;\r\n  position: absolute;\r\n  top: 0;\r\n  transition: opacity 300ms;\r\n  width: 100%;\r\n  z-index: 3;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    background-size: 48px;\r\n  }\r\n`\r\n\r\nconst StyledEditProfileAvatar = styled.div`\r\n  position: relative;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n\r\n    ${EditOverlay} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`\r\n\r\nconst AvatarWrapper = styled.div`\r\n  height: 64px;\r\n  width: 64px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 128px;\r\n    width: 128px;\r\n  }\r\n`\r\n\r\nconst EditProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\r\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\r\n\r\n  return (\r\n    <StyledEditProfileAvatar onClick={onEditProfileModal}>\r\n      <AvatarWrapper>\r\n        <ProfileAvatarWithTeam profile={profile} />\r\n      </AvatarWrapper>\r\n      <EditOverlay />\r\n    </StyledEditProfileAvatar>\r\n  )\r\n}\r\n\r\nexport default EditProfileAvatar\r\n", "import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CheckmarkCircleIcon,\r\n  Flex,\r\n  Heading,\r\n  Link,\r\n  Tag,\r\n  Text,\r\n  PrizeIcon,\r\n  OpenNewIcon,\r\n  BlockIcon,\r\n  VisibilityOn,\r\n  VisibilityOff,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { useUserUsernameVisibility } from 'state/user/hooks'\r\nimport { getBscScanLink } from 'utils'\r\nimport Menu from './components/Menu'\r\nimport CardHeader from './components/CardHeader'\r\nimport Collectibles from './components/Collectibles'\r\nimport WalletNotConnected from './components/WalletNotConnected'\r\nimport StatBox from './components/StatBox'\r\nimport EditProfileAvatar from './components/EditProfileAvatar'\r\nimport AchievementsList from './components/AchievementsList'\r\n\r\nconst Content = styled.div`\r\n  flex: 1;\r\n  padding: 16px 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding: 0 16px;\r\n  }\r\n`\r\n\r\nconst Username = styled(Heading)`\r\n  font-size: 16px;\r\n  line-height: 24px;\r\n  margin-bottom: 8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    font-size: 40px;\r\n    line-height: 44px;\r\n  }\r\n`\r\n\r\nconst Status = styled.div`\r\n  position: absolute;\r\n  right: 24px;\r\n  top: 24px;\r\n`\r\n\r\nconst ResponsiveText = styled(Text)`\r\n  font-size: 12px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    font-size: 16px;\r\n  }\r\n`\r\n\r\nconst AddressLink = styled(Link)`\r\n  display: inline-block;\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  width: 80px;\r\n  white-space: nowrap;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    font-size: 16px;\r\n    width: auto;\r\n  }\r\n`\r\n\r\nconst Section = styled.div`\r\n  margin-bottom: 40px;\r\n`\r\n\r\nconst PublicProfile = () => {\r\n  const { account } = useWeb3React()\r\n  const { profile } = useProfile()\r\n  const [usernameVisibilityToggled, setUsernameVisibility] = useUserUsernameVisibility()\r\n  const { t } = useTranslation()\r\n\r\n  if (!account) {\r\n    return <WalletNotConnected />\r\n  }\r\n\r\n  const toggleUsernameVisibility = () => {\r\n    setUsernameVisibility(!usernameVisibilityToggled)\r\n  }\r\n\r\n  const { username, team, isActive, points } = profile\r\n\r\n  const Icon = usernameVisibilityToggled ? VisibilityOff : VisibilityOn\r\n\r\n  return (\r\n    <>\r\n      <Menu activeIndex={1} />\r\n      <div>\r\n        <Card>\r\n          <CardHeader>\r\n            <Flex alignItems={['start', null, 'center']} flexDirection={['column', null, 'row']}>\r\n              <EditProfileAvatar profile={profile} />\r\n              <Content>\r\n                <Flex alignItems=\"center\">\r\n                  <Username>@{usernameVisibilityToggled ? username : username.replace(/./g, '*')}</Username>\r\n                  <Icon ml=\"4px\" onClick={toggleUsernameVisibility} cursor=\"pointer\" />\r\n                </Flex>\r\n                <Flex alignItems=\"center\">\r\n                  <AddressLink href={getBscScanLink(account, 'address')} color=\"text\" external>\r\n                    {account}\r\n                    <OpenNewIcon ml=\"4px\" />\r\n                  </AddressLink>\r\n                </Flex>\r\n                <ResponsiveText bold>{team.name}</ResponsiveText>\r\n              </Content>\r\n            </Flex>\r\n            <Status>\r\n              {isActive ? (\r\n                <Tag startIcon={<CheckmarkCircleIcon width=\"18px\" />} outline>\r\n                  {t('Active')}\r\n                </Tag>\r\n              ) : (\r\n                <Tag variant=\"failure\" startIcon={<BlockIcon width=\"18px\" />} outline>\r\n                  {t('Paused')}\r\n                </Tag>\r\n              )}\r\n            </Status>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <StatBox icon={PrizeIcon} title={points} subtitle={t('Points')} mb=\"24px\" />\r\n            <Section>\r\n              <Heading as=\"h4\" scale=\"md\" mb=\"16px\">\r\n                {t('Achievements')}\r\n              </Heading>\r\n              <AchievementsList />\r\n            </Section>\r\n            <Collectibles />\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PublicProfile\r\n", "import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport Page from 'components/Layout/Page'\r\nimport PageLoader from 'components/Loader/PageLoader'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { useFetchAchievements } from 'state/achievements/hooks'\r\nimport ProfileCreation from './ProfileCreation'\r\nimport Header from './components/Header'\r\nimport TaskCenter from './TaskCenter'\r\nimport PublicProfile from './PublicProfile'\r\n\r\nconst Profile = () => {\r\n  const { isInitialized, isLoading, hasProfile } = useProfile()\r\n  const { account } = useWeb3React()\r\n\r\n  useFetchAchievements()\r\n\r\n  if (!isInitialized || isLoading) {\r\n    return <PageLoader />\r\n  }\r\n\r\n  if (account && !hasProfile) {\r\n    return (\r\n      <Page>\r\n        <ProfileCreation />\r\n      </Page>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Page>\r\n      <Header />\r\n      <Route exact path=\"/profile\">\r\n        <PublicProfile />\r\n      </Route>\r\n      <Route path=\"/profile/tasks\">\r\n        <TaskCenter />\r\n      </Route>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n", "import React from 'react'\r\nimport { NoProfileAvatarIcon } from '@pancakeswap/uikit'\r\nimport { Profile } from 'state/types'\r\nimport styled from 'styled-components'\r\n\r\nexport interface ProfileAvatarProps {\r\n  profile: Profile\r\n}\r\n\r\nconst TeamAvatar = styled.img`\r\n  border: 1px solid ${({ theme }) => theme.card.background};\r\n  border-radius: 50%;\r\n  bottom: 0px;\r\n  position: absolute;\r\n  right: 0px;\r\n  min-width: 20px;\r\n  min-height: 20px;\r\n  width: 37.5%;\r\n  height: 37.5%;\r\n  z-index: 5;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    border-width: 2px;\r\n  }\r\n`\r\n\r\nconst AvatarWrapper = styled.div<{ bg: string }>`\r\n  background: url('${({ bg }) => bg}');\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  border-radius: 50%;\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  & > img {\r\n    border-radius: 50%;\r\n  }\r\n`\r\n// TODO: replace with no profile avatar icon\r\nconst AvatarInactive = styled(NoProfileAvatarIcon)`\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\n\r\nconst ProfileAvatarWithTeam: React.FC<ProfileAvatarProps> = ({ profile }) => {\r\n  return (\r\n    <AvatarWrapper bg={`/images/nfts/${profile.nft?.images?.md}`}>\r\n      {!profile.isActive && <AvatarInactive />}\r\n      <TeamAvatar src={`/images/teams/${profile.team.images.alt}`} alt={profile.team.name} />\r\n    </AvatarWrapper>\r\n  )\r\n}\r\n\r\nexport default ProfileAvatarWithTeam\r\n", "var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = baseRandom(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nmodule.exports = shuffleSelf;\n", "var arrayShuffle = require('./_arrayShuffle'),\n    baseShuffle = require('./_baseShuffle'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */\nfunction shuffle(collection) {\n  var func = isArray(collection) ? arrayShuffle : baseShuffle;\n  return func(collection);\n}\n\nmodule.exports = shuffle;\n", "var copyArray = require('./_copyArray'),\n    shuffleSelf = require('./_shuffleSelf');\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return shuffleSelf(copyArray(array));\n}\n\nmodule.exports = arrayShuffle;\n", "var shuffleSelf = require('./_shuffleSelf'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.shuffle`.\n *\n * @private\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction baseShuffle(collection) {\n  return shuffleSelf(values(collection));\n}\n\nmodule.exports = baseShuffle;\n"], "sourceRoot": "" }